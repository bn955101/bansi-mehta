{"version":3,"sources":["components/AppNavbar.js","layouts/AppLayout.js","components/PageHeader.js","services/notificationService.js","components/Notification.js","components/DashboardNavbar.js","components/DashboardSidebar.js","layouts/DashboardLayout.js","pages/Home.js","services/registerServices.js","pages/Auth/Login.js","pages/Auth/Register.js","services/dashboardService.js","pages/Dashboard.js","components/Datatable.js","services/invoiceServices.js","pages/Invoices/GenerateInvoice.js","services/timelogServices.js","services/projectsServices.js","services/clientService.js","pages/Timelogs.js","services/clientsServices.js","pages/Projects/AddProject.js","pages/Projects.js","pages/Projects/EditProject.js","pages/Clients/AddClient.js","pages/Clients.js","pages/Clients/EditClient.js","pages/Clients/ViewClient.js","services/testimonialServices.js","pages/Testimonials.js","pages/RequestTestimonial.js","pages/Invoices.js","services/todoListService.js","pages/TodoList.js","services/calendarServices.js","pages/Calendar.js","pages/Invoices/EditInvoice.js","pages/BusinessCard.js","App.js","reportWebVitals.js","index.js"],"names":["AppNavbar","Navbar","className","Container","Brand","href","Nav","Link","AppLayout","children","PageHeader","props","title","subtitle","userId","a","axios","post","result","value","console","log","Notification","openNotification","setState","NotificationService","setStatus","then","response","catch","error","fetchNotifications","handleNotificationShow","state","values","notificationShow","getAllNotifications","localStorage","getItem","notifications","data","forEach","element","item","eventName","category","viewStatus","push","this","Dropdown","Toggle","id","Menu","map","index","Item","onClick","Modal","show","onHide","handleNotificationClose","Header","closeButton","Title","Body","Component","withRouter","DashboardNavbar","useState","removeItem","Sidebar","location","useLocation","open","setOpen","Collapse","in","Overflow","ToC","pathname","class","DashboardLayout","history","useHistory","useEffect","fluid","Row","Col","md","as","DashboardSidebar","Home","role","user","Login","email","password","loginData","setLoginData","emailError","passwordError","loginErrors","setLoginErrors","handleChange","e","newLogin","target","name","handleSubmit","preventDefault","valid","newLoginError","registerServices","fatchUser","Email","Password","setItem","_id","alert","onSubmit","Form","Label","type","placeholder","onChange","Button","variant","Register","checkEmail","checkPassword","checkMobile","mobile","linkedin","website","confirmPassword","registrationInfo","setRegistrationInfo","nameError","mobileError","linkedinError","websiteError","confirmPasswordError","registrationErrors","setRegistrationErrors","newRegistration","newRegError","test","addNewUser","get","params","Dashboard","clients","projects","invoices","testimonials","stats","setStats","doughnutData","setDoughnutData","lineData","setLineData","barData","setBarData","dashboardService","res","clientProjects","labels","datasets","label","backgroundColor","borderWidth","clientInvoiceStats","invoices_paid","invoices_due","timelogStats","dates","durations","fill","borderColor","style","fontSize","Card","options","responsive","Datatable","columns","allowCSV","allowSearch","tableInstance","useTable","initialState","pageSize","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setGlobalFilter","page","canPreviousPage","canNextPage","pageCount","gotoPage","nextPage","previousPage","setPageSize","globalFilter","span","filename","offset","Group","Control","Table","bordered","striped","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","width","Number","Pagination","First","disabled","Prev","Array","v","Next","Last","length","date","GenerateInvoice","onValueChange","event","validateProject","isValid","project","projectError","validateDate","validateDueDate","validateEndDate","dueDate","today","Date","selectedDate","endDate","dueDateError","endDateError","validateHourlyRate","hourlyRate","hourlyRateError","validateForm","generateInvoice","invoiceDetails","generateDate","now","invoiceServices","getTags","status","tags","totalCost","startdate","startAt","enddate","endAt","seconds","Math","floor","minutes","hour","description","task","hours","total","concat","totalcost","saveInvoice","addInvoice","closeInvoice","projectId","readonly","paymentStatus","clientName","invoiceNumber","Total","generatedDate","accessor","findInvoice","projectName","invId","getAllProject","onBlur","isInvalid","Feedback","put","delete","object","client","saveData","deleteData","Timelogs","moment","format","Cell","deleteTask","setData","timelogServices","list","lastTask","setTask","restartTimer","timerState","setTimerState","timerStart","setTimerStart","setTimerEnd","timerString","setTimerString","timer","setTimer","centiseconds","slice","setInterval","setProjects","setClients","clientService","getAllClients","projectServices","taskError","setTaskError","showModal","setShowModal","newTask","handleModalClose","startTask","newTaskError","isTaskValid","add","window","confirm","newData","remove","message","splice","Subtitle","clearInterval","update","ClientName","Text","filter","includes","Footer","AddProjects","rate","invoice","setProject","setClient","clientsServices","setProjectError","newProject","newProjectError","projectsServices","isProjectValid","min","Projects","editProject","original","url","EditProjects","prop","useParams","split","selected","AddClient","validateClient","clientNameError","validateOrganization","organizationName","organizationNameError","validateContactNo","contactNo","contactNoError","RegExp","validateWebsiteName","websiteName","websiteNameError","validateEmailId","emailId","emailIdError","validateLinkedInProfile","linkedInProfile","linkedInProfileError","validateStreet","street","streetError","validatePostalcode","postalCode","PostalCodeError","validateMeetingPlatform","meetingPlatform","meetingPlatformError","addNewClient","onClickBack","businessDescription","country","region","val","validateClientName","OrganizationName","ContactNo","WebsiteName","EmailId","Street","BusinessDescription","validatebusinessDescription","PostalCode","MeetingPlatform","xs","defaultOptionLabel","selectCountry","blankOptionLabel","selectRegion","Clients","viewDetails","viewOneClient","editDetails","deleteDetails","deleteClient","newdetails","Emailid","Website","handleNewClient","Organization","bind","align","newDetails","EditClient","onUpdate","editClient","clientId","ClientId","LinkedInProfile","Country","Region","ViewClient","hover","Testimonials","deleteTestimonial","clientServices","testimonial","setTestimonial","testimonialServices","mailInfo","setMailInfo","newRequest","lgShow","setLgShow","size","aria-labelledby","cli","proj","Form_Link","mailParams","freelancerName","freelancerMail","clientMail","link","emailjs","send","text","sendEmail","RequestTestimonial","param","feedback","setFeedback","newFeedback","Invoices","editInvoice","invoicename","viewInvoice","deleteInvoice","deleteinvoice","getAllInvoices","checkbox","generateddate","duedate","clientname","projectname","paymentstatus","currentDate","TodoList","saveItem","todoListService","saveTask","getAllData","getPreviousDate","previousDate","subtract","getNextDate","nextDate","completeTasks","incompleteTasks","getAllTasks","completeTask","incompleteTask","rowData","markTaskAsDone","palceholder","lg","checked","taskItemComplete","taskItemDelete","Calendar","events","setEvents","calendarServices","newEvents","dateTime","time","calendarEvent","setCalendarEvent","calendarEventError","setCalendarEventError","newCalendarEvent","defaultView","plugins","dayGridPlugin","interactionPlugin","dateClick","arg","dateStr","newCalendarEventError","isEventValid","EditInvoice","updateInvoice","cancel","paymentPreStatus","taskendDate","BusinessCardFront","apiData","Name","BusinessCardBack","BusinessClassDisplay","flipOnHover","display","justifyContent","height","profileData","testimonialData","BusinessCard","exportAsSide","side","exportSide","componentRef","React","createRef","fatchUserById","ButtonGroup","Fragment","ref","exportComponentAsJPEG","App","exact","path","EditProject","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dfc96cf5.chunk.js","sourcesContent":["/* Author: Vishal Sancheti */\n\nimport {Container, Nav, Navbar} from \"react-bootstrap\";\nimport \"../styles/AppNavbar.scss\"\n\nexport default function AppNavbar(){\n    return (\n        <Navbar className=\"app-nav-bar-container\">\n            <Container>\n                <Navbar.Brand className=\"app-nav-bar-text\" href=\"/\">Freelance Dashboard</Navbar.Brand>\n                <Nav className=\"ml-auto\">\n                    <Nav.Link className=\"app-nav-bar-link\" href=\"login\">Login</Nav.Link>\n                    <Nav.Link className=\"app-nav-bar-link\" href=\"register\">Register</Nav.Link>\n                </Nav>\n            </Container>\n        </Navbar>\n    )\n}","/* Author: Vishal Sancheti */\n\nimport React from 'react';\nimport AppNavbar from \"../components/AppNavbar\";\nimport {Container} from \"react-bootstrap\";\n\n// Page Wrapper for Application Pages\nconst AppLayout =({children}) =>{\n\n    return(\n        <>\n            <header>\n                <AppNavbar/>\n            </header>\n            <main>\n                {children}\n            </main>\n            <hr/>\n            <footer className=\"container\">\n                <p>All rights reserved.</p>\n            </footer>\n        </>\n    )\n}\n\nexport default AppLayout;","/* Author: Vishal Sancheti */\n\nimport React from 'react';\nimport \"../styles/PageHeader.scss\"\nconst PageHeader =(props) =>{\n    return(\n        <>\n            <div className=\"page-header-title\">{props.title}</div>\n            <div className=\"page-header-subtitle\">{props.subtitle}</div>\n        </>\n    )\n}\n\nexport default PageHeader;","import axios from \"axios\";\n\nexport class notificationService {\n    async getAllNotifications(userId) {\n        const result = await axios.post(\"/api/notification/List\" ,{userId: userId} );\n        return result;\n    }\n\n    async setStatus(value) {\n        console.log(value);\n        const result = await axios.post(\"/api/notification/setStatus\" ,value);\n        return result;\n    }\n}\n\nexport default new notificationService()","import \"../styles/DashboardNavbar.scss\";\nimport {Accordion, Container, CustomToggle, Card, Dropdown, Modal, Nav, Navbar, Button} from \"react-bootstrap\";\nimport React,  {Component} from 'react';\nimport NotificationService from \"../services/notificationService\"\nimport { withRouter } from \"react-router\";\n\nclass Notification extends Component\n{\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            values: [],\n            value: {},\n            notificationShow: false\n        };\n    }\n\n    fetchNotifications(){\n        NotificationService.getAllNotifications(localStorage.getItem(\"user_id\")).then((response) => {\n            console.log(response);\n            let notifications = [];\n            response.data.forEach(element => {\n                let item = {};\n                item.eventName = element.eventName;\n                item.category = element.category;\n                item.viewStatus = element.viewStatus;\n                notifications.push(item)\n            });\n            this.setState({\n                values: notifications\n            });\n            console.log(this.state.values);\n        }).catch((error) => {\n            console.log(\"Error\")\n        })\n    }\n\n    componentDidMount() {\n        this.fetchNotifications();\n    }\n\n    handleNotificationClose(){\n        this.setState({notificationShow:false});\n    };\n    handleNotificationShow(){\n        this.setState({notificationShow:true});\n    };\n\n    openNotification = (value) => {\n        this.setState({value:value});\n        NotificationService.setStatus(value).then((response) => {\n            console.log('stored');\n        }).catch((error) => {\n            console.log(\"Error\")\n        });\n        this.fetchNotifications();\n        this.handleNotificationShow();\n\n    };\n\n    render() {\n        return (\n            <div>\n                <Dropdown>\n                    <Dropdown.Toggle title=\"Notification\" id=\"bellIcon\">\n                        <i className=\"fas fa-bell\"/>\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu id=\"notificationPanel\" >\n                        {this.state.values.map((value,index) => {\n                            return <Dropdown.Item className=\"border-bottom\" onClick = { () => this.openNotification(value)}>\n                                <span className={ value.viewStatus?\"\":\"text-primary\"} >{value.eventName}</span>\n                            </Dropdown.Item>\n                        })}\n                    </Dropdown.Menu>\n                </Dropdown>\n                <Modal show={this.state.notificationShow} onHide={() => this.handleNotificationClose()}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>{this.state.value.category}</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        {this.state.value.eventName}\n                    </Modal.Body>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Notification)\n","/* Author: Vishal Sancheti */\n\nimport {Accordion, Container,  CustomToggle, Card, Dropdown, Nav, Navbar} from \"react-bootstrap\";\nimport \"../styles/DashboardNavbar.scss\";\nimport { useState, useEffect } from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport Notification from \"../components/Notification\";\nexport default function DashboardNavbar(){\n  \n    const [lgShow, setLgShow] = useState(false);\n\n    return (\n        <Navbar className=\"nav-bar-container\">\n            <Container>\n                <Navbar.Brand className=\"nav-bar-text\" href=\"/\">Freelance Dashboard</Navbar.Brand>\n                <Nav className=\"ml-auto\">\n                    <Nav.Link title=\"Notification\" className=\"nav-bar-link\" >\n                    <Notification/>\n                    </Nav.Link>\n                    <Nav.Link title=\"Profile\" className=\"nav-bar-link\" href=\"#profile\">\n                        <i className=\"fas fa-user\"/>\n                    </Nav.Link>\n                    <Nav.Link title=\"Log Out\" className=\"nav-bar-link\"  onClick={ () => {localStorage.removeItem('user_id')} } href=\"/\">\n                        <i className=\"fas fa-sign-out-alt\"/>\n                    </Nav.Link>\n                </Nav>\n            </Container>\n        </Navbar>\n    )\n}","/* Author: Vishal Sancheti */\n\nimport '../styles/style.scss';\nimport React, { useState } from 'react';\nimport { Collapse } from 'react-bootstrap';\nimport { Drawer } from 'react-bootstrap-drawer';\nimport '../styles/DashboardSidebar.scss';\nimport { useLocation } from 'react-router-dom'\n\nexport default function Sidebar(props) {\n    const location = useLocation();\n    const [open, setOpen] = useState(false);\n    const handleToggle = () => setOpen(!open);\n\n    return (\n        <Drawer {...props}>\n            <Drawer.Toggle onClick={handleToggle} />\n\n            <Collapse in={open}>\n                <Drawer.Overflow>\n                    <Drawer.ToC>\n                        <Drawer.Item href=\"/dashboard\">\n                            <span className={location.pathname === \"/dashboard\" ? 'nav-item-active' : ''}>\n                                <i className=\"fas fa-tachometer-alt\"></i> Dashboard\n                            </span>\n                        </Drawer.Item>\n\n                        <Drawer.Nav>\n                            <Drawer.Item href=\"/clients\">\n                                <span className={location.pathname === \"/clients\" ? 'nav-item-active' : ''}>\n                                    <i className=\"fas fa-users\"></i> Clients\n                                </span>\n                            </Drawer.Item>\n                            <Drawer.Item href=\"/projects\">\n                                <span className={location.pathname === \"/projects\" ? \"nav-item-active\" : ''}>\n                                    <i className=\"fas fa-briefcase\"></i> Projects\n                                </span>\n                            </Drawer.Item>\n                            <Drawer.Item href=\"/timelogs\">\n                                <span className={location.pathname === \"/timelogs\" ? 'nav-item-active' : ''}>\n                                    <i className=\"fas fa-stopwatch\"></i> Time Logs\n                                </span>\n                            </Drawer.Item>\n                            <Drawer.Item href=\"/invoices\">\n                                <span className={location.pathname === \"/invoices\" ? 'nav-item-active' : ''}>\n                                    <i className=\"fas fa-file-invoice\"></i> Invoices\n                                </span>\n                            </Drawer.Item>\n                            <Drawer.Item href=\"/testimonials\">\n                                <span className={location.pathname === \"/testimonials\" ? 'nav-item-active' : ''}>\n                                    <i className=\"fas fa-comment\"></i> Testimonials\n                                </span>\n                            </Drawer.Item>\n\n                            <hr className=\"horizontal-break\" />\n\n                            <Drawer.Item href=\"/todolist\">\n                                <span className={location.pathname === \"/todolist\" ? 'nav-item-active' : ''}>\n                                    <i className=\"fas fa-tasks\"></i> ToDo\n                                </span>\n                            </Drawer.Item>\n                            <Drawer.Item href=\"/calendar\">\n                                <span className={location.pathname === \"/calendar\" ? 'nav-item-active' : ''}>\n                                    <i className=\"fas fa-calendar\"></i> Calendar\n                                </span>\n                            </Drawer.Item>\n                            <Drawer.Item href=\"/business-card\">\n                                <span className={location.pathname === \"/business-card\" ? 'nav-item-active' : ''}>\n                                    <i class=\"fas fa-address-card\"></i> Business Card\n                                </span>\n                            </Drawer.Item>\n                        </Drawer.Nav>\n                    </Drawer.ToC>\n                </Drawer.Overflow>\n            </Collapse>\n        </Drawer>\n    );\n};","/* Author: Vishal Sancheti */\n\nimport React, { useEffect } from 'react';\nimport DashboardNavbar from \"../components/DashboardNavbar\";\nimport DashboardSidebar from \"../components/DashboardSidebar\";\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport { useHistory } from 'react-router-dom';\n\n// Page Wrapper for Dashboard Pages\nconst DashboardLayout =({children}) =>{\n    const history = useHistory();\n\n    useEffect(() => {\n        let user = localStorage.getItem('user_id')\n        if(!user){\n            history.push('/login')\n        }\n\n    },[]);\n\n    return(\n        <>\n            <header>\n                <DashboardNavbar/>\n            </header>\n            <main>\n                <Container fluid>\n                    <Row>\n                        <Col md={2} as={DashboardSidebar} />\n                        <Col md={10}>\n                            {children}\n                        </Col>\n                    </Row>\n                </Container>\n            </main>\n        </>\n    )\n}\n\nexport default DashboardLayout;","import React from 'react';\n\nexport default function Home(){\n    return (\n        <div>\n            <div className=\"jumbotron\">\n                <h1 className=\"display-4\">Hello, Freelancer!</h1>\n                <p className=\"lead\">This is the only tool you will be using, a one stop solution for all your freelacing needs.</p>\n                <hr className=\"my-4\"/>\n                <p className=\"lead\">Minimal UI with Powerful features.</p>\n                <a className=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">Get Started</a>\n            </div>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h2>What we offer?</h2>\n                    </div>\n                </div>\n                <hr/>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-md-4\">\n                        <h4><i className=\"fas fa-tachometer-alt\"></i> Dashboard</h4>\n                        <p>Visualize all your stats and report from single screen.</p>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <h4><i className=\"fas fa-users\"></i> Client Management</h4>\n                        <p>No more address book entries, easily maintain clients and their details.</p>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <h4><i className=\"fas fa-briefcase\"></i> Project Management</h4>\n                        <p>No more looking searching emails, efficiently maintain client project association and details.</p>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-md-4\">\n                        <h4><i className=\"fas fa-stopwatch\"></i> Time Logging</h4>\n                        <p>No more maintaining spreadsheet, easily log times with our interactive time logging.</p>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <h4><i className=\"fas fa-file-invoice\"></i> Invoice Management</h4>\n                        <p>No more filtering spreadsheet for invoice, easily make invoices.</p>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <h4><i className=\"fas fa-comment\"></i> Testimonial Management</h4>\n                        <p>No more missing out testimonials from clients, easily request and maintain testimonials.</p>\n                    </div>\n\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-md-4\">\n                        <h4><i className=\"fas fa-tasks\"></i> ToDo List</h4>\n                        <p>No more sticky notes, easily maitain your todo task with interactive todo list.</p>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <h4><i className=\"fas fa-calendar\"></i> Calendar</h4>\n                        <p>No more mixing of personal and business events, easily manage events with our full fledged calendar.</p>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <h4><i className=\"fas fa-id-card\"></i> Digital Business Card</h4>\n                        <p>Easily create and share your digital business card with client testimonials.</p>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-md-4\">\n                        <h4><i className=\"fas fa-bell\"></i> Notifications</h4>\n                        <p>Never miss a calendar event, invoice due date, and other events with our notifications.</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","/**\n * Author: Deep Patel\n * Created On: 2021-07-28\n */\n\nimport axios from \"axios\"\n\nexport class registerService {\n\n   async addNewUser(data) {\n      const result = await axios.post('/api/register/add', data);\n      return result.data;\n   }\n\n   async fatchUser(user) {\n      const result = await axios.post(\"/api/register/fatchUser\", user);\n      return result.data;\n   }\n\n   async fatchUserById(id) {\n      const result = await axios.post(\"/api/register/fetchUserById\", { id: id });\n      return result.data;\n   }\n}\n\nexport default new registerService()","import React from 'react';\nimport { useState } from 'react';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { Button, Form } from 'react-bootstrap';\nimport registerServices from '../../services/registerServices';\n\nexport default function Login(){\n\n    let history = useHistory();\n\n    const [loginData, setLoginData] = useState({\n        email: \"\",\n        password: \"\",\n    });\n\n    const [loginErrors, setLoginErrors] = useState({\n        emailError: \"\",\n        passwordError: \"\"\n    });\n\n    const handleChange = (e) => {\n        let newLogin = {...loginData, [e.target.name]: e.target.value};\n        setLoginData(newLogin);\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        let valid = true;\n\n        setLoginErrors({\n            emailError: \"\",\n            passwordError: \"\"\n        })\n\n        let newLoginError = {...loginErrors};\n\n        if(loginData.email === \"\"){\n            newLoginError.emailError = \"Please enter email!!\";\n            setLoginErrors(newLoginError);\n            valid = false;\n        }\n        else{\n            newLoginError.emailError = \"\";\n            setLoginErrors(newLoginError);\n        }\n\n        if(loginData.password === \"\"){\n            newLoginError.passwordError = \"Please enter Password!!\";\n            setLoginErrors(newLoginError);\n            valid = false;\n        }\n        else{\n            newLoginError.passwordError = \"\";\n            setLoginErrors(newLoginError);\n        }\n        console.log(loginErrors);\n\n        if(valid === true){\n            registerServices.fatchUser(loginData).then((response) => {\n                if(response){\n                    if(loginData.email === response.Email && loginData.password === response.Password){\n                        localStorage.setItem('user_id', response._id);\n                        alert(\"Login Successful!!\");\n                        history.push(\"/dashboard\");\n                    }else{\n                        alert(\"Invalid Password!!\"); \n                    }\n                }\n            }).catch((error) => {\n                alert(\"Login Failed!!\");\n                console.log(\"Eroor:\",error)\n            })\n        }\n      };\n\n    return (\n        <div>\n            <div className=\"row\" > <br /> </div>\n\n            <div className=\"row\" > \n                <div className=\"col-md-3\"></div>\n                <div className=\"col-md-6\">\n                    <form onSubmit={handleSubmit}>\n                        <br />\n                        <br />\n                        <h3>Log in</h3>\n\n                        <div className=\"form-group\">\n                        <Form.Label className=\"required\">Email</Form.Label>\n                            <input \n                                type=\"email\" \n                                className=\"form-control\" \n                                placeholder=\"Please enter email \"\n                                id = \"email\"\n                                name = \"email\"\n                                onChange={(e) => handleChange(e)} \n                            />\n                        </div>\n                        <p className=\"text-danger\">{loginErrors.emailError}</p>\n\n                        <div className=\"form-group\">\n                        <Form.Label className=\"required\">Password</Form.Label>\n                            <input \n                                type=\"password\" \n                                className=\"form-control\" \n                                placeholder=\"Please enter password\"\n                                id = \"password\"\n                                name = \"password\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                        </div>\n                        <p className=\"text-danger\">{loginErrors.passwordError}</p>\n\n                        <div className=\"form-group\">\n                            <div>\n                                <input type=\"checkbox\" id=\"customCheck1\" />\n                                <label>Remember me</label>\n                            </div>\n                        </div>\n\n                        <Button variant=\"primary\" type=\"submit\" className=\"btn-block\">Sign in</Button>\n                        <p className=\"forgot-password text-right\">\n                            Forgot <a href=\"#\">password?</a>\n                        </p>\n                    </form>\n                </div>    \n                <div className=\"col-md-3\"></div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Form } from 'react-bootstrap';\nimport registerServices from '../../services/registerServices';\n\nexport default function Register(){\n\n    let history = useHistory();\n\n    const checkEmail = /(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const checkPassword = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/;\n    const checkMobile = /^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d{4})(?: *x(\\d+))?\\s*$/;\n    const [registrationInfo, setRegistrationInfo] = useState({\n        name: '',\n        email: '',\n        mobile:'',\n        linkedin:'',\n        website:'',\n        password: '',\n        confirmPassword: ''\n    });\n\n    const [registrationErrors, setRegistrationErrors] = useState({\n        nameError: '',\n        emailError: '',\n        mobileError:'',\n        linkedinError:'',\n        websiteError:'',\n        passwordError: '',\n        confirmPasswordError: ''\n    });\n\n    const handleChange = (e) => {\n        let newRegistration = {...registrationInfo, [e.target.name]: e.target.value};\n        setRegistrationInfo(newRegistration);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        let valid = true;\n\n        setRegistrationErrors({\n            nameError: '',\n            emailError: '',\n            mobileError:'',\n            linkedinError:'',\n            websiteError:'',\n            passwordError: '',\n            confirmPasswordError: ''\n        })\n\n        let newRegError = {...registrationErrors};\n\n        if(registrationInfo.name === \"\"){\n            newRegError.nameError = \"Please enter name!!\";\n            setRegistrationErrors(newRegError);\n            valid = false;\n        }\n        else{\n            newRegError.nameError = \"\";\n            setRegistrationErrors(newRegError);\n        }\n\n        if(registrationInfo.email === \"\"){\n            newRegError.emailError = \"Please enter email!!\";\n            setRegistrationErrors(newRegError);\n            valid = false;\n        }\n        else{\n            if(!checkEmail.test(registrationInfo.email)){\n                newRegError.emailError = \"Email Invalid!!\";\n                setRegistrationErrors(newRegError);\n                valid = false;\n            }\n            else{\n                newRegError.emailError = \"\";\n                setRegistrationErrors(newRegError);\n            }\n        }\n        \n        if(registrationInfo.mobile === \"\"){\n            newRegError.mobileError = \"Please enter Contact Number!!\";\n            setRegistrationErrors(newRegError);\n            valid = false;\n        }\n        else{\n            if(!checkMobile.test(registrationInfo.mobile)){\n                newRegError.mobileError = \"Contact number Invalid!!\";\n                setRegistrationErrors(newRegError);\n                valid = false;\n            }\n            else{\n                newRegError.mobileError = \"\";\n                setRegistrationErrors(newRegError);\n            }\n        }\n\n        if(registrationInfo.linkedin === \"\"){\n            newRegError.linkedinError = \"Please enter linkedin!!\";\n            setRegistrationErrors(newRegError);\n            valid = false;\n        }\n        else{\n            newRegError.linkedinError = \"\";\n            setRegistrationErrors(newRegError);\n        }\n\n        if(registrationInfo.password === \"\"){\n            newRegError.passwordError = \"Please enter password!!\";\n            setRegistrationErrors(newRegError);\n            valid = false;\n        }\n        else{\n            if(!checkPassword.test(registrationInfo.password)){\n                newRegError.passwordError = \"Password Invalid!!\";\n                setRegistrationErrors(newRegError);\n                valid = false;\n            }\n            else{\n                newRegError.passwordError = \"\";\n                setRegistrationErrors(newRegError);\n            }\n        }\n\n        if(registrationInfo.confirmPassword === \"\"){\n            newRegError.confirmPasswordError = \"Please enter password!!\";\n            setRegistrationErrors(newRegError);\n            valid = false;\n        }\n        else{\n            if((registrationInfo.password) !==  registrationInfo.confirmPassword){\n                newRegError.confirmPasswordError = \"Password does not match!!\";\n                setRegistrationErrors(newRegError);\n                valid = false;\n            }\n            else{\n                newRegError.confirmPasswordError = \"\";\n                setRegistrationErrors(newRegError);\n            }\n        }\n\n\n        if(valid === true){\n\n            registerServices.addNewUser(registrationInfo).then((response) => {\n                console.log(response)\n                if(response){\n                    alert(\"Registration Successful!!\");\n                    history.push(\"/login\");\n                }\n            }).catch((error) => {\n                console.log(\"Eroor:\",error)\n            })\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"row\" > <br /> </div>\n            <div className=\"row\" > \n                <div className=\"col-md-3\"></div>\n                <div className=\"col-md-6\">\n                    <form onSubmit={handleSubmit}>\n                        <br />\n                        <br />\n                        <h3>Register</h3>\n\n                        <div className=\"form-group\">\n                            <Form.Label className=\"required\">Name</Form.Label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                placeholder=\"Enter Name\"\n                                id = \"name\"\n                                name = \"name\"\n                                onChange={(e) => handleChange(e)} \n                            />\n                            <p className=\"text-danger\">{registrationErrors.nameError}</p>\n                        </div>\n\n                        <div className=\"form-group\">\n                        <Form.Label className=\"required\">Email</Form.Label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                placeholder=\"Enter email\"\n                                id = \"email\"\n                                name = \"email\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                            <p className=\"text-danger\">{registrationErrors.emailError}</p>\n                        </div>\n\n                        <div className=\"form-group\">\n                        <Form.Label className=\"required\">Contact Number</Form.Label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                placeholder=\"Enter mobile number\"\n                                id = \"mobile\"\n                                name = \"mobile\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                            <p className=\"text-danger\">{registrationErrors.mobileError}</p>\n                        </div>\n\n                        <div className=\"form-group\">\n                        <Form.Label className=\"required\"> LinkedIn Profile</Form.Label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                placeholder=\"Enter linkedIn profile link\"\n                                id = \"linkedin\"\n                                name = \"linkedin\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                            <p className=\"text-danger\">{registrationErrors.linkedinError}</p>\n                        </div>\n\n\n                        <div className=\"form-group\">\n                        <Form.Label> Website</Form.Label>\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                placeholder=\"Enter website link\"\n                                id = \"website\"\n                                name = \"website\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                            <p className=\"text-danger\">{registrationErrors.websiteError}</p>\n                        </div>\n\n                        <div className=\"form-group\">\n                        <Form.Label className=\"required\">Password</Form.Label>\n                            <input \n                                type=\"password\" \n                                className=\"form-control\" \n                                placeholder=\"Enter password\"\n                                id = \"password\"\n                                name = \"password\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                            <p className=\"text-danger\">{registrationErrors.passwordError}</p>\n                        </div>\n\n                        <div className=\"form-group\">\n                        <Form.Label className=\"required\">Confirm Password</Form.Label>\n                            <input \n                                type=\"password\" \n                                className=\"form-control\"\n                                name=\"confirmPassword\"\n                                id=\"confirmPassword\"\n                                placeholder=\"Confirm your password\"\n                                onChange={(e) => handleChange(e)}\n                            />\n                            <p className=\"text-danger\">{registrationErrors.confirmPasswordError}</p>\n                        </div>\n\n                        <Button variant=\"primary\" type=\"submit\" className= \"btn-block\" > Register </Button>\n                    </form>\n                </div>    \n                <div className=\"col-md-3\"></div>\n            </div>\n        </div>\n    )\n}","/* Author: Vishal Sancheti */\n\nimport axios from \"axios\";\n\nexport class dashboardService{\n    // Get stat counts\n    async stats(data){\n        const result = await axios.get(\"/api/dashboard/stats\",{ params: data });\n        return result.data;\n    };\n\n    // Get client project count\n    async clientProjects(data){\n        const result = await axios.get(\"/api/dashboard/client-projects\",{ params: data });\n        return result.data;\n    };\n\n    // Get client invoice stats\n    async clientInvoiceStats(data){\n        const result = await axios.get(\"/api/dashboard/client-invoice-stats\",{ params: data });\n        return result.data;\n    };\n\n    // Get timelog stats\n    async timelogStats(data){\n        const result = await axios.get(\"/api/dashboard/timelog-stats\",{ params: data });\n        return result.data;\n    };\n}\n\nexport default new dashboardService()","import React, {useEffect, useState} from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport {Line, Bar, Doughnut} from \"react-chartjs-2\";\nimport {Card} from \"react-bootstrap\";\nimport dashboardService from \"../services/dashboardService\";\n\nexport default function Dashboard(){\n    const [stats,setStats] = useState({\n        clients: 0,\n        projects:0,\n        invoices:0,\n        testimonials:0,\n    });\n    const [doughnutData,setDoughnutData] = useState({});\n    const [lineData,setLineData] = useState({});\n    const [barData,setBarData] = useState({});\n    useEffect(()=>{\n        dashboardService.stats({\"userId\": localStorage.getItem(\"user_id\")}).then(res => setStats(res.data));\n        dashboardService.clientProjects({\"userId\": localStorage.getItem(\"user_id\")}).then(res =>  setDoughnutData({\n            labels: res.data.clients,\n            datasets: [\n                {\n                    label: '# of Projects',\n                    data: res.data.projects,\n                    backgroundColor: [\n                        'rgba(255, 99, 132, 0.2)',\n                        'rgba(54, 162, 235, 0.2)',\n                        'rgba(255, 206, 86, 0.2)',\n                        'rgba(75, 192, 192, 0.2)',\n                        'rgba(153, 102, 255, 0.2)',\n                        'rgba(255, 159, 64, 0.2)',\n                    ],\n                    borderWidth: 1,\n                },\n            ],\n        }));\n        dashboardService.clientInvoiceStats({\"userId\": localStorage.getItem(\"user_id\")}).then(res => setBarData({\n            labels: res.data.clients,\n            datasets: [\n                {\n                    label: '# of Paid Invoices',\n                    data: res.data.invoices_paid,\n                    backgroundColor: 'rgb(255, 99, 132)',\n                },\n                {\n                    label: '# of Due Invoices',\n                    data:  res.data.invoices_due,\n                    backgroundColor: 'rgb(54, 162, 235)',\n                },\n            ],\n        }));\n        dashboardService.timelogStats({\"userId\": localStorage.getItem(\"user_id\")}).then(res => setLineData({\n            labels: res.data.dates,\n            datasets: [\n                {\n                    label: '# of Hours Logged',\n                    data: res.data.durations,\n                    fill: false,\n                    backgroundColor: 'rgb(255, 99, 132)',\n                    borderColor: 'rgba(255, 99, 132, 0.2)',\n                },\n            ],\n        }));\n\n    },[]);\n\n    return (\n        <div className=\"page-container\">\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Dashboard\" subtitle=\"\"/>\n            </div>\n            <div className=\"page-content-container\">\n                <div className=\"page-content\">\n                    <div className=\"row\">\n                        <div className=\"col-xl-3 col-md-6\">\n                            <div className=\"border justify-content-center d-flex align-items-center \">\n                                <div style={{fontSize:\"4rem\"}} className=\"mr-2\">{stats.clients}</div>\n                                <div className=\"text-center\">\n                                    <div className=\"border-bottom\">Clients</div>\n                                    <div><a href=\"/clients\">View all</a></div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-xl-3 col-md-6\">\n                            <div className=\"border justify-content-center d-flex align-items-center \">\n                                <div style={{fontSize:\"4rem\"}} className=\"mr-2\">{stats.projects}</div>\n                                <div className=\"text-center\">\n                                    <div className=\"border-bottom\">Projects</div>\n                                    <div><a href=\"/projects\">View all</a></div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-xl-3 col-md-6\">\n                            <div className=\"border justify-content-center d-flex align-items-center \">\n                                <div style={{fontSize:\"4rem\"}} className=\"mr-2\">{stats.invoices}</div>\n                                <div className=\"text-center\">\n                                    <div className=\"border-bottom\">Invoices</div>\n                                    <div><a href=\"/invoices\">View all</a></div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-xl-3 col-md-6\">\n                            <div className=\"border justify-content-center d-flex align-items-center \">\n                                <div style={{fontSize:\"4rem\"}} className=\"mr-2\">{stats.testimonials}</div>\n                                <div className=\"text-center\">\n                                    <div className=\"border-bottom\">Testimonials</div>\n                                    <div><a href=\"/testimonials\">View all</a></div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <hr/>\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            <Card>\n                                <Card.Body>\n                                    <Card.Title>Client and # of Projects</Card.Title>\n                                    <Doughnut data={doughnutData} options={{ responsive: true }} />\n                                </Card.Body>\n                            </Card>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <Card>\n                                <Card.Body>\n                                    <Line data={lineData} options={{ responsive: true }} />\n                                </Card.Body>\n                            </Card>\n                            <br/>\n                            <Card>\n                                <Card.Body>\n                                    <Bar data={barData} options={{ responsive: true }} />\n                                </Card.Body>\n                            </Card>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    )\n}","/* Author: Vishal Sancheti */\n\nimport React from 'react';\nimport {useGlobalFilter, usePagination, useSortBy, useTable} from \"react-table\";\nimport {Col, Form, Row, Table} from \"react-bootstrap\";\nimport Pagination from \"react-bootstrap/Pagination\";\nimport {CSVLink} from \"react-csv\";\n\nconst Datatable = (props) => {\n    //Init\n    const columns = props.columns;\n    const data = props.data;\n    const allowCSV = props.allowCSV == \"false\" ? false : true;\n    const allowSearch = props.allowSearch == \"false\" ? false : true;\n    const tableInstance = useTable({ columns, data, initialState: { pageSize: 5 } },\n        useGlobalFilter,\n        useSortBy,\n        usePagination);\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        setGlobalFilter,\n        page,\n        canPreviousPage,\n        canNextPage,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        state: { pageSize, globalFilter }\n    } = tableInstance;\n\n    return (\n        <div>\n            <Row>\n                {/*Conditional Display Export CSV Button*/}\n                <Col md={{ span: 2 }} className=\"my-2\">\n                {allowCSV ?\n                    (\n                        <CSVLink data={data} filename={\"export.csv\"} className=\"secondary-button btn btn-secondary\" target=\"_blank\">\n                            Export CSV\n                        </CSVLink>\n                   )\n                    : (<></>)\n                }\n                </Col>\n\n                {/*Conditional Display Search Form*/}\n                {allowSearch ?\n                    (<Col md={{ span: 2, offset: 8 }}>\n                        <Form.Group>\n                            <Form.Control type=\"search\" placeholder=\"Search\"\n                                          value={globalFilter || \"\"}\n                                          onChange={e => setGlobalFilter(e.target.value)} />\n                        </Form.Group>\n                    </Col>)\n                    : (<></>)\n                }\n            </Row>\n\n            {/*Table*/}\n            <div className=\"table-responsive\">\n                <Table bordered striped {...getTableProps()}>\n                    <thead>\n                    {headerGroups.map(headerGroup => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {headerGroup.headers.map(column => (\n                                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                                    {column.render('Header')}\n                                    <span>{column.isSorted ?\n                                        column.isSortedDesc ?\n                                            ' 🔽': ' 🔼'\n                                        : ''}</span>\n                                </th>\n                            ))}\n                        </tr>\n                    ))}\n                    </thead>\n                    <tbody {...getTableBodyProps()}>\n                    {page.map((row, i) => {\n                        prepareRow(row);\n                        return (\n                            <tr {...row.getRowProps()}>\n                                {row.cells.map((cell) => {\n                                    return (\n                                        <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                                    );\n                                })}\n                            </tr>\n                        );\n                    })}\n                    </tbody>\n                </Table>\n            </div>\n\n            {/*Filters and Pagination*/}\n            <Row>\n                <Col>\n                    <Form.Group>\n                        <Form.Control as=\"select\" style={{ width: \"100px\" }}\n                                      value={pageSize}\n                                      onChange={(e) => {\n                                          setPageSize(Number(e.target.value));\n                                      }}>\n                            {[5, 10, 20, 30, 40, 50].map((pageSize) => (\n                                <option key={pageSize} value={pageSize}>\n                                    Show {pageSize}\n                                </option>\n                            ))}\n                        </Form.Control>\n                    </Form.Group>\n                </Col>\n                <Col>\n                    <Pagination className=\"justify-content-end\">\n                        <Pagination.First onClick={() => gotoPage(0)} disabled={!canPreviousPage}/>\n                        <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage}/>\n                        {Array(pageCount).fill().map((v,i) => (\n                            <Pagination.Item onClick={() => gotoPage(i)}>{i+1}</Pagination.Item>\n                        ))}\n                        <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage}/>\n                        <Pagination.Last onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}/>\n                    </Pagination>\n                </Col>\n            </Row>\n\n            {/*Table Info*/}\n            <Row>\n                <Col>\n                    <span>Showing {pageSize} results of {rows.length} rows</span>\n                </Col>\n            </Row>\n        </div>\n    )\n};\n\nexport default Datatable;\n","/**\n * Author: Tejaswi Chaudhary.\n * Created On: 2021-06-07\n * Service Containing API calls for Invoice management, Invoice generation and Edit invoice.\n */\n import axios from \"axios\"\n export class TodoListService {\n     async getTags(date) {\n         const result = await axios.post(\"/api/invoices/tags\",  date );\n         return result;\n     }\n \n     async addInvoice(data) {\n         const result = await axios.post(\"/api/invoices/save\", data);\n         return result;\n     }\n \n     async findInvoice(data) {\n         const result = await axios.post(\"/api/invoices/findinvoice\", data);\n         return result;\n     }\n \n     async getAllProject() {\n         const result = await axios.get(\"/api/invoices/getproject\");\n         return result;\n     }\n     \n     async getAllInvoices() {\n        const result = await axios.get(\"/api/invoices/fetchinvoices\");\n        return result;\n    }\n\n    async deleteinvoice(data) {\n        const result = await axios.post(\"/api/invoices/deleteinvoice\",data);\n        return result;\n    }\n     \n    async updateInvoice(data) {\n        const result = await axios.post(\"/api/invoices/updateinvoice\",data);\n        return result;\n    }\n }\n \n export default new TodoListService()","\n/**\n * Author: Tejaswi Chaudhary.\n * Created On: 2021-06-07\n * Invoice Generation component.\n */\nimport React, { Component } from 'react';\nimport PageHeader from \"../../components/PageHeader\";\nimport Datatable from \"../../components/Datatable\";\nimport { withRouter } from 'react-router-dom';\nimport \"../../styles/InvoiceGeneration.scss\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios'\nimport invoiceServices from \"../../services/invoiceServices\";\n\n\nexport class GenerateInvoice extends Component {\n\n    constructor(props) {\n        super(props)\n        console.log(props)\n        this.state = {\n            \n     \n            projectId: props && props.history && props.history.location&&props.history.location.state &&props.history.location.state.state?props.history.location.state.state:0,\n            readonly: props && props.history && props.history.location&&props.history.location.state &&props.history.location.state.state? true:false,\n            dueDateError: \"\",\n            endDate: \"\",\n            endDateError: \"\",\n            hourlyRate: \"\",\n            hourlyRateError: \"\",\n            project: \"\",\n            projectError: \"\",\n            totalcost:0,\n            projects: [],\n            tags:[],\n            generateDate :\"\",\n            paymentStatus:\"Unpaid\",\n            dueDate:\"\",\n            clientName:\"\",\n            invoiceNumber:\"\",\n            Total:\"\",\n            generatedDate:\"\",\n            invoiceDetails:[]\n\n        }\n\n\n        this.columns = [\n            { Header: 'Description', accessor: 'description' },\n            { Header: 'Time (hours)', accessor: 'hours' },\n            { Header: 'Total', accessor: 'total' }\n        ];\n    }\n    /**\n     * when page renders it will fetch all the invoices or invoice based on read condition\n     * \n     * If this component is called from invoiceManagement.js, this page will open as read-only mode. \n     * in read-only mode, it will fetch generated invoice details based on the project id.\n     * \n     * If this component is called from dahsboard, it will allow a user to generate invoice.\n     */\n    componentDidMount() {\n        //executed when called in read-only mode\n        if(this.state.readonly){\n            invoiceServices.findInvoice(this.state).then((response) =>{\n                console.log(response)\n                if (response.status == 200){\n                    this.setState({ project: response.data.projectName})\n                    this.setState({clientName:response.data.clientName})\n                    this.setState({dueDate: response.data.dueDate})\n                    this.setState({generatedDate: response.data.generatedDate})\n                    this.setState({hourlyRate:response.data.hourlyRate})\n                    this.setState({Total:response.data.totalCost})\n                    this.setState({invoiceNumber:response.data.invId})\n                    this.setState({paymentStatus:response.data.paymentStatus})\n                    let invoiceDetails=[]\n                    response.data.tags.forEach(row => {\n                                          \n                        let data = {}                       \n                        data.description = row.description;\n                        data.hours = row.hours\n                        data.total = row.total\n                        invoiceDetails.push(data)                        \n                    })\n                    if(invoiceDetails.length !=0 ){\n                        this.setState({invoiceDetails: this.state.invoiceDetails.concat(invoiceDetails)})\n                        console.log(this.state.invoiceDetails)   \n                    }\n                \n                } \n            }).catch((error) => {\n                console.log(error)\n            })\n        }else{\n            //Executed when called from dashbord page\n            invoiceServices.getAllProject().then((response) => {\n            if (response.status == 200) {\n                this.setState({ projects: response.data })\n            }\n        }).catch((error) => {\n            console.log(\"Eroor\")\n        })\n        }\n        \n    }\n\n    \n    //On value change of a control, set it in state.\n    onValueChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    //validate project field\n    validateProject = (event) => {\n        let isValid = true;\n        if (!this.state.project) {\n            this.setState({ projectError: \"Project is required\" })\n            isValid = false;\n        }\n        return isValid;\n    }\n    //validate due date and project duration date\n    validateDate = (event) => {\n        let isValid = true;\n        if (!this.validateDueDate()) {\n            isValid = false;\n        }\n        if (!this.validateEndDate()) {\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    validateDueDate = (event) => {\n        let isValid = true;\n        if (this.state.dueDate) {\n            const today = new Date()\n            const selectedDate = new Date(this.state.dueDate)\n            const endDate = new Date(this.state.endDate)\n            if (selectedDate < today) {\n                this.setState({ dueDateError: \"Due Date cannot be past date\" })\n                isValid = false;\n            }else if(endDate > selectedDate) {\n                this.setState({ dueDateError: \"Due Date must be greater than project duration date\" })\n                isValid = false;\n            }\n            else {\n                this.setState({ dueDateError: \"\" })\n            }\n        } else {\n            this.setState({ dueDateError: \"Due Date is required\" })\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    validateEndDate = (event) => {\n        let isValid = true;\n        const today = new Date()\n        const dueDate = new Date(this.state.dueDate)\n        const endDate = new Date(this.state.endDate)\n        if (dueDate && endDate) {\n            if (dueDate < endDate || today < endDate) {\n                this.setState({ endDateError: \"End Date cannot be greater than due date or current date\" })\n                isValid = false;\n            } else {\n                this.setState({ endDateError: \"\" })\n            }\n        } else {\n            this.setState({ endDateError: \"End date is required\" })\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    //validate horly rate field\n    validateHourlyRate = (event) => {\n        let isValid = true;\n        if (!this.state.hourlyRate) {\n            this.setState({ hourlyRateError: \"Hourly Rate is required\" })\n            isValid = false;\n        }else if(this.state.hourlyRate < 1){\n            this.setState({ hourlyRateError: \"Hourly Rate must be a greater than 0\" })\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    validateForm = (event) => {\n        let isValid = true\n\n        if (!this.validateProject()) {\n            isValid = false;\n        }\n        if (!this.validateDate()) {\n            isValid = false;\n        }\n        if (!this.validateHourlyRate()) {\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    //Generate invoice by fetching all the task from the timelog collection\n    generateInvoice = (event) => {\n        event.preventDefault();\n        this.setState({invoiceDetails:[]})\n        //invoice generation date\n        this.setState({generateDate:Date.now()})\n        if(this.validateForm()){\n            invoiceServices.getTags(this.state).then((response) => {\n                if (response.status == 200) {\n                    console.log(response.data)\n                    this.setState({ tags: response.data })\n                    let invoiceDetails = []\n                    let totalCost = 0\n                    response.data.forEach(row => {\n                                                \n                        let data = {}\n                        var startdate = new Date(row.startAt);\n                        \n                        var enddate = new Date(row.endAt);\n                      \n                        var seconds = Math.floor(((enddate) - (startdate))/1000)\n                        \n                        var minutes = Math.floor(seconds/60)\n                        var hour = Math.floor(minutes/60)\n                       \n                        data.description = row.task;\n                        data.hours = hour\n                        data.total = this.state.hourlyRate * hour\n                        totalCost = totalCost + data.total\n                        invoiceDetails.push(data)\n                        \n                        \n                    })\n                    //store tags, hours worked on that tags and total cost for performing that task\n                    if(invoiceDetails.length !=0 ){\n                        this.setState({invoiceDetails: this.state.invoiceDetails.concat(invoiceDetails)})\n                        this.setState({totalcost:totalCost})\n                          \n                    }\n                \n                }\n            }).catch((error) => {\n                console.log(error)\n            })\n            \n        }\n        \n        \n    }\n    \n    //this function store generated invoices in database\n    saveInvoice =(event)=>{\n        if(this.state.invoiceDetails.length == 0){\n            this.generateInvoice()\n        }\n        if(this.validateForm()){\n           \n            invoiceServices.addInvoice(this.state).then((response) =>{\n                if (response.status == 200){\n                    console.log(response)\n                    alert(\"Ïnvoice Added\")\n                } \n            }).catch((error) => {\n                console.log(error)\n            })\n        }\n    }\n    //called when component is called in read-only mode. This function redirect to invoicemanagement page\n    closeInvoice = (e) =>{\n        this.props.history.push('/invoicemanagement')\n    }\n    render() {\n        return (\n            <div className=\"page-container invoice-generation-container\">\n                <div className=\"page-header-container\">\n                    {this.state.readonly ? (<PageHeader title=\"Invoice Details\" subtitle=\"\" />)\n                    :(<PageHeader title=\"Invoice Generation\" subtitle=\"\" />)}\n                </div>\n                <div className=\"page-content-container\">\n                    <div className=\"page-content\">\n                        <Row className=\"invoice-generation-content\">\n                            <Col>\n                                <Form>\n                                    <div className=\"generate-forms\">\n                                        <Row>\n                                            <Col>\n                                            {this.state.readonly ? (\n                                                        <span>\n                                                            <div> Invoice Number :{this.state.invoiceNumber}</div>\n                                                            <div>Project Name :  {this.state.project}</div>\n                                                            <div>Client Name : {this.state.clientName}</div>\n                                                            <div>Invoice Genrated : {this.state.generatedDate} </div>\n                                                            <div>Payment Due Date : {this.state.dueDate} </div>\n                                                            <div>Hourly Rate :{this.state.hourlyRate} CAD </div>\n                                                            <div>Total Amount :{this.state.Total} CAD </div>\n                                                            <div>Payment Status :{this.state.paymentStatus} </div>\n                                                            <div> </div>\n                                                        </span>\n                                                        \n                                                    ) : (\n                                                <Form.Group>\n                                                    <Form.Label className=\"required\">Project</Form.Label>\n                                                    <Form.Control as=\"select\" name=\"project\" value={this.state.project} onChange={this.onValueChange}\n                                                        onBlur={this.validateProject}\n                                                        isInvalid={this.state.projectError}>\n                                                    <option>Select Project</option>\n                                                    {this.state.projects.map(project => (\n                                                        <option value={project._id}>{project.title}</option>\n                                                    ))}\n                                                    </Form.Control>\n                                                    <Form.Control.Feedback type=\"invalid\">\n                                                        {this.state.projectError}\n                                                    </Form.Control.Feedback>\n                                                </Form.Group>)}\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                \n                                                    {this.state.readonly?(<div></div>):\n                                                    (\n                                                    <Form.Group>\n                                                    \n                                                    <div className=\"inline-date-control\">\n                                                        <div className=\"due-date-control\">\n                                                            <div>\n                                                                <Form.Label className=\"required\">Invoice Duedate</Form.Label>\n                                                            </div>\n                                                            <Form.Control type=\"date\" className=\"start-date\" name=\"dueDate\" placeholder=\"Due Date\" value={this.state.dueDate} onChange={this.onValueChange}\n                                                                onBlur={this.validateDate}\n                                                                isInvalid={this.state.dueDateError} />\n                                                            <Form.Control.Feedback type=\"invalid\">\n                                                                {this.state.dueDateError}\n                                                            </Form.Control.Feedback>\n                                                        </div>\n                                                        <div className=\"end-date-control\">\n                                                            <div>\n                                                                <Form.Label className=\"required\">Project Duration</Form.Label>\n                                                            </div>\n                                                            <Form.Control type=\"date\" name=\"endDate\" placeholder=\"End Date\" value={this.state.endDate} onChange={this.onValueChange}\n                                                                onBlur={this.validateDate}\n                                                                isInvalid={this.state.endDateError} />\n                                                            <Form.Control.Feedback type=\"invalid\">\n                                                                {this.state.endDateError}\n                                                            </Form.Control.Feedback>\n                                                        </div>\n                                                    </div>\n                                                    </Form.Group>)}\n                                            </Col>\n                                            <Col>\n                                            {this.state.readonly?(<div></div>):(\n                                                <Form.Group>\n                                                <Form.Label className=\"required\">Hourly Rate</Form.Label>\n                                                <Form.Control type=\"number\" name=\"hourlyRate\" placeholder=\"Hourly Rate\" value={this.state.hourlyRate} onChange={this.onValueChange}\n                                                    onBlur={this.validateHourlyRate}\n                                                    isInvalid={this.state.hourlyRateError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.hourlyRateError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                            )} \n                                            </Col>\n                                        </Row>\n                                    </div>\n                                    <div className=\"generate-buttons\">\n                                        \n                                        {this.state.readonly?\n                                        (<Button className=\"secondary-button\" onClick={this.closeInvoice}>\n                                        Close\n                                        </Button>):\n                                        (<Row className=\"generate-button-container\">\n                                            <Button className=\"primary-button\" onClick={this.generateInvoice}>\n                                                Generate Invoice\n                                            </Button>\n                                            <Button className=\"secondary-button\" onClick={this.saveInvoice}>\n                                                Save\n                                            </Button>\n                                            <Button className=\"secondary-button\">\n                                                Download\n                                            </Button>\n                                            <Button className=\"secondary-button\">\n                                                Send\n                                            </Button>\n                                        </Row>)}\n                                        \n                                    </div>\n                                </Form>\n                            </Col>\n                        </Row>\n                        <Row className=\"data-table-container\">\n                            <Col>\n                                <Datatable columns={this.columns} data={this.state.invoiceDetails} allowCSV=\"false\" allowSearch=\"false\" />\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(GenerateInvoice);","/* Author: Vishal Sancheti */\n\nimport axios from \"axios\";\n\nexport class timelogServices{\n    // Get all Timelogs\n    async list(data){\n        const result = await axios.get(\"/api/timelogs\",{ params: data });\n        return result.data;\n    };\n\n    // Add new Timelog\n    async add(data){\n        data.projectId = data.project;\n        const result = await axios.post(\"/api/timelogs/add\",data);\n        return result.data;\n    };\n\n    // Update Timelog\n    async update(data){\n        data.projectId = data.project;\n        console.log(data);\n        const result = await axios.put(\"/api/timelogs/update/\"+data._id,data);\n        return result.data;\n    };\n\n    // Remove Timelog\n    async remove(data){\n        const result = await axios.delete(\"/api/timelogs/remove/\"+data._id,data);\n        return result.data;\n    };\n}\n\nexport default new timelogServices()","/**\n * Author: Sanket Shah.\n * Created On: 2021-07-20\n * Services for Projects.\n */\n\nimport axios from \"axios\";\n\nexport class projectsServices{\n\n    /**\n     * Method to hit the API of getting list of projects\n     */\n    async list(data){\n        let object = {}\n        object['userId'] = data.userId\n        const result = await axios.post(\"/api/projects\",object);\n        return result.data;\n    };\n\n    /**\n     * Method to hit the API of getting single project\n     */\n    async get(id){\n        const result = await axios.get(\"/api/projects/\"+id);\n        return result.data;\n    };\n\n    /**\n     * Method to hit the API of adding project in a list\n     */\n    async add(data){\n        //data.projectId = data.project;\n        const result = await axios.post(\"/api/projects/add\",data);\n        return result.data;\n    };\n\n    /**\n     * Method to hit the API of updating a project\n     */\n    async update(data){\n        //data.projectId = data.project;\n        console.log(data);\n        const result = await axios.put(\"/api/projects/update/\"+data._id,data);\n        return result.data;\n    };\n\n    /**\n     * Method to hit the API of removing the project\n     */\n    async remove(data){\n        const result = await axios.delete(\"/api/projects/remove/\"+data._id,data);\n        return result.data;\n    };\n}\n\nexport default new projectsServices()","/**\n * Author: Janvi Patel\n * Created On: 2021-07-20\n */\n\n import axios from \"axios\"\n\n export class ClientService {\n     async getAllClients(userId) {\n         const result = await axios.post(\"/api/clients/getAll\", {userId: userId} );\n         return result;\n     }\n \n     async editClient(client) {\n         const result = await axios.post(\"/api/clients/edit\", client );\n         return result;\n     }\n \n     async viewOneClient(client) {\n         const result = await axios.post(\"/api/clients/viewOne\" , client);\n         return result;\n     }\n \n     async addNewClient(saveData) {\n        const result = await axios.post('/api/clients/add', saveData);\n         return result;\n     }\n\n     async deleteClient(deleteData) {\n        const result = await axios.post(\"/api/clients/delete\", deleteData);\n        return result;\n     }\n }\n \n export default new ClientService()","/* Author: Vishal Sancheti */\n\nimport React, { useEffect, useState } from 'react';\nimport moment from 'moment'\nimport PageHeader from \"../components/PageHeader\";\nimport Datatable from \"../components/Datatable\";\nimport { Button, Card, Col, Container, Form, Modal, Row } from \"react-bootstrap\";\n\nimport timelogServices from '../services/timelogServices.js'\nimport projectServices from '../services/projectsServices.js'\nimport clientService from \"../services/clientService\";\n\nexport default function Timelogs() {\n    //Init\n    const columns = [\n        { Header: 'Project', accessor: 'project.title' },\n        { Header: 'Client', accessor: 'project.client' },\n        { Header: 'Task', accessor: 'task' },\n        { Header: 'Start At', accessor: row => moment(row.startAt).format(\"DD-MM-YYYY hh:mm:ss\")},\n        { Header: 'End At', accessor: row => row.endAt ? moment(row.endAt).format(\"DD-MM-YYYY hh:mm:ss\"):\"-\"},\n        { Header: 'Action', id: 'action', accessor: 'row',\n            Cell: ({ row }) => (<Button className=\"delete-button\" onClick={() => { deleteTask(row) }}>Delete</Button>)\n        }\n    ];\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        timelogServices.list({\"userId\": localStorage.getItem(\"user_id\")}).then(res => setData(res.data));\n    },[]);\n\n    useEffect(() => {\n        if(data.length){\n            let lastTask = data[0];\n            if(lastTask && !lastTask.endAt){\n                setTask(lastTask);\n                restartTimer(new Date(lastTask.startAt));\n            }\n        }\n    },[data]);\n\n    // Timer properties and actions\n    const [timerState, setTimerState] = useState(0);\n    const [timerStart, setTimerStart] = useState(Date.now());\n    const [timerEnd, setTimerEnd] = useState(Date.now());\n    const [timerString, setTimerString] = useState(\"00 : 00 : 00 : 00\");\n    const [timer, setTimer] = useState(0);\n    useEffect(() => {\n        let centiseconds = (\"0\" + (Math.floor(timer / 10) % 100)).slice(-2);\n        let seconds = (\"0\" + (Math.floor(timer / 1000) % 60)).slice(-2);\n        let minutes = (\"0\" + (Math.floor(timer / 60000) % 60)).slice(-2);\n        let hours = (\"0\" + Math.floor(timer / 3600000)).slice(-2);\n        setTimerString(hours + \" : \" + minutes + \" : \" + seconds + \" : \" + centiseconds);\n    }, [timer]);\n    const startTimer = () => {\n        if (timerState === 0) {\n            setTimerStart(Date.now() - timer);\n            setTimerState(\n                setInterval(() => {\n                    setTimer(Date.now() - timerStart)\n                }, 10)\n            );\n        }\n    };\n    const restartTimer = (startAt) => {\n        if (timerState === 0) {\n            setTimerStart(startAt - timer);\n            setTimer(Date.now() - startAt);\n            setTimerState(\n                setInterval(() => {\n                    setTimer( Date.now() - startAt)\n                }, 10)\n            );\n        }\n    };\n    const stopTimer = () => {\n        setTimerEnd(Date.now());\n        clearInterval(timerState);\n        setTimerState(0);\n        setTimer(0);\n    };\n\n    // New Task States\n    const [projects, setProjects] = useState([]);\n    const [clients, setClients] = useState([]);\n    useEffect(() => {\n        clientService.getAllClients(localStorage.getItem(\"user_id\")).then(res => setClients(res.data));\n    },[]);\n    useEffect(() => {\n        projectServices.list({\"userId\": localStorage.getItem(\"user_id\")}).then(res => setProjects(res.data));\n    },[]);\n    const [task, setTask] = useState({\n        project: \"\",\n        client: \"\",\n        task: \"\",\n        startAt: \"\",\n        endAt: \"\"\n    });\n    const [taskError, setTaskError] = useState({\n        project: \"\",\n        client: \"\",\n        task: \"\"\n    });\n    const [showModal, setShowModal] = useState(false);\n\n    //New Task Validation\n    const handleChange = (e) => {\n        let newTask = { ...task, [e.target.name]: e.target.value };\n        setTask(newTask);\n    };\n    const isTaskValid = () => {\n        let valid = true;\n        setTaskError({\n            project: \"\",\n            client: \"\",\n            task: \"\"\n        });\n\n        if (!task.project.length > 0) {\n            let newTaskError = { ...taskError };\n            newTaskError.project = \"Project is required\";\n            setTaskError(newTaskError);\n            valid = false;\n        }\n\n        if (!task.client.length > 0) {\n            let newTaskError = { ...taskError };\n            newTaskError.client = \"Client is required\";\n            setTaskError(newTaskError);\n            valid = false;\n        }\n\n        if (!task.task.length > 0) {\n            let newTaskError = { ...taskError };\n            newTaskError.task = \"Task is required\";\n            setTaskError(newTaskError);\n            valid = false;\n        }\n        return valid;\n    };\n\n    // New Task Modal Event Handle\n    const handleModalClose = () => setShowModal(false);\n    const handleModalShow = () => setShowModal(true);\n\n    // New Task Actions\n    const startTask = (e) => {\n        e.preventDefault();\n        if (isTaskValid()) {\n            startTimer();\n            task.startAt = Date.now();\n            task.userId = localStorage.getItem(\"user_id\");\n            timelogServices.add(task).then(res => {task._id = res.data._id; task.project = res.data.project});\n            setData(data => [task, ...data]);\n            handleModalClose();\n        }\n    };\n    const stopTask = () => {\n        stopTimer();\n        let newData = [...data];\n        newData[0].endAt = Date.now();\n        timelogServices.update(newData[0]).then(res => alert(res.message));\n        setData(newData);\n        setTask({\n            project: \"\",\n            client: \"\",\n            task: \"\",\n            startAt: \"\",\n            endAt: \"\"\n        });\n    };\n    const deleteTask = (task) => {\n        if (window.confirm(\"Are you sure?\")) {\n            let newData = [...data];\n            timelogServices.remove(newData[0]).then(res => alert(res.message));\n            newData.splice(task.index, 1);\n            setData(newData);\n        }\n    };\n\n    return (\n        <div className=\"page-container timelogs-container\">\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Time logs\" subtitle=\"\" />\n            </div>\n            <div className=\"page-content-container\">\n                <div className=\"page-content\">\n                    <Row className=\"justify-content-center\">\n                        <Col md={6}>\n                            <Card>\n                                <Card.Body className=\"text-center\">\n                                    <Card.Title style={{ fontSize: \"2.5rem\" }}>{timerString}</Card.Title>\n                                    {timer <= 0 &&\n                                    <Button className=\"primary-button btn\" onClick={handleModalShow}>Start</Button>\n                                    }\n                                    {timer > 0 &&\n                                    <>\n                                        <Card.Subtitle className=\"mb-2 text-muted\">Task: {task.task}</Card.Subtitle>\n                                        <Button className=\"delete-button btn\" onClick={stopTask}>Stop</Button>\n                                    </>\n                                    }\n                                </Card.Body>\n                            </Card>\n                        </Col>\n                    </Row>\n                    <Modal show={showModal} onHide={handleModalClose}>\n                        <Form onSubmit={(e) => startTask(e)}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>New Task</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body className=\"show-grid\">\n                                <Container>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group className=\"mb-3\">\n                                                <Form.Label>Client</Form.Label>\n                                                <Form.Control as=\"select\" name=\"client\"\n                                                              onChange={(e) => handleChange(e)}\n                                                              className={taskError.client.length > 0 ? \"is-invalid\" : \"\"}>\n                                                    <option value=\"\">Select Client</option>\n                                                    {clients.length && clients.map(function(client,index){\n                                                        return <option key={index} value={client.ClientName}>{client.ClientName}</option>\n                                                    })}\n                                                </Form.Control>\n                                                <Form.Text className=\"text-danger\">{taskError.client}</Form.Text>\n                                            </Form.Group>\n                                        </Col>\n                                        <Col>\n                                            <Form.Group className=\"mb-3\">\n                                                <Form.Label>Project</Form.Label>\n                                                <Form.Control as=\"select\" name=\"project\"\n                                                              onChange={(e) => handleChange(e)}\n                                                              className={taskError.project.length > 0 ? \"is-invalid\" : \"\"}>\n                                                    <option value=\"\">Select Project</option>\n                                                    {projects.length && projects.filter(project => project.client && project.client.includes(task.client))\n                                                        .map(function(project,index){\n                                                            return <option key={index} value={project._id}>{project.title}</option>\n                                                        })}\n                                                </Form.Control>\n                                                <Form.Text className=\"text-danger\">{taskError.project}</Form.Text>\n                                            </Form.Group>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group className=\"mb-3\">\n                                                <Form.Label>Task</Form.Label>\n                                                <Form.Control type=\"text\" name=\"task\" placeholder=\"Task Description...\"\n                                                              onChange={(e) => handleChange(e)}\n                                                              className={taskError.task.length > 0 ? \"is-invalid\" : \"\"} />\n                                                <Form.Text className=\"text-danger\">{taskError.task}</Form.Text>\n                                            </Form.Group>\n                                        </Col>\n                                    </Row>\n                                </Container>\n                            </Modal.Body>\n                            <Modal.Footer>\n                                <Button className=\"secondary-button\" type=\"reset\" onClick={handleModalClose}>\n                                    Close\n                                </Button>\n                                <Button className=\"primary-button\" type=\"submit\">\n                                    Start\n                                </Button>\n                            </Modal.Footer>\n                        </Form>\n\n                    </Modal>\n                    <Datatable columns={columns} data={data} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\n","import axios from \"axios\";\n\nexport class clientsServices{\n    async list(){\n        const result = await axios.get(\"/api/clients/\");\n        return result.data;\n    };\n}\n\nexport default new clientsServices()","/**\n * Author: Sanket Shah.\n * Created On: 2021-07-20\n * Add Project File.\n */\n\nimport {useState, useEffect, React} from 'react';\nimport PageHeader from \"../../components/PageHeader\";\nimport { Redirect, useHistory } from 'react-router-dom';\nimport projectsServices from '../../services/projectsServices';\nimport clientsServices from '../../services/clientsServices';\nimport {Col, Row} from \"react-bootstrap\";\n\n/**\n *  Functionality for adding the project\n */\nexport default function AddProjects(){\n\n    const history = useHistory();\n\n    async function cancel() {\n        let url = \"/projects\";\n        history.push(url);\n    }\n\n    const [project, setProject] = useState({\n        title: \"\",\n        client: \"\",\n        description: \"\",\n        rate: \"\",\n        invoice: \"\",\n        status: \"\",\n        userId: localStorage.getItem(\"user_id\")\n    });\n\n    const [clients, setClient] = useState({\n        ClientName : \"\"\n    });\n\n    useEffect(() => {\n        clientsServices.list().then(res => setClient(res.data));\n        console.log(clients);\n    },[]);\n\n    const [projectError, setProjectError] = useState({\n        title: \"\",\n        client: \"\",\n        description: \"\",\n        rate: \"\",\n        invoice: \"\",\n        status: \"\"\n    });\n\n    const handleChange = (e) => {\n        let newProject = {...project, [e.target.name]: e.target.value};\n        setProject(newProject);\n    };\n\n    const isProjectValid = (e) => {\n        e.preventDefault();\n        let valid = true;\n        setProjectError({\n            title: \"\",\n            client: \"\",\n            description: \"\",\n            rate: \"\",\n            invoice: \"\",\n            status: \"\"\n        });\n        let newProjectError = {...projectError};\n\n        if(!project.title.length > 0){\n            newProjectError.title = \"Project Title is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.title = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.client.length > 0){\n            newProjectError.client = \"Client Name is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.client = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.description.length > 0){\n            newProjectError.description = \"Project Description is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.description = \"\";\n            setProjectError(newProjectError);\n        }\n\n        // if(!project.rate.value > 0){\n        //     newProjectError.rate = \"Rate is required\";\n        //     setProjectError(newProjectError);\n        //     valid = false;\n        // }\n        // else{\n        //     newProjectError.rate = \"\";\n        //     setProjectError(newProjectError);\n        // }\n\n        if(!project.invoice.length > 0){\n            newProjectError.invoice = \"Invoice Duration is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.invoice = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.status.length > 0){\n            newProjectError.status = \"Project Status is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.status = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(valid === true){\n            projectsServices.add(project).then(res => res);\n            history.push('/projects');\n        }\n        return valid;\n    };\n\n    return (\n        <div className=\"page-container\">\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Projects\" />\n            </div>\n            <div className=\"page-content-container\">\n                <div className=\"page-content\">\n                    <Row>\n                        <Col>\n                            <form onSubmit={(e) => isProjectValid(e)}><center>\n\n                                <div className=\"form-group row\">\n                                    <label className=\"col-md-2 col-form-label\">Project Title*: </label>\n                                    <div className=\"col-md-10\">\n                                        <input title=\"Project Title\" placeholder=\"Enter Project Title\" onChange={(e) => handleChange(e)}\n                                               className={projectError.title.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"text\" name=\"title\" id=\"title\"/>\n                                        <p className=\"text-danger\">{projectError.title}</p>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group row\">\n                                    <label className=\"col-md-2 col-form-label\">Client Name:</label>\n                                    <div className=\"col-md-10\">\n                                        <select title=\"Client Name\" onChange={(e) => handleChange(e)}\n                                                className={projectError.client.length > 0 ? \"is-invalid form-control\" : \"form-control\"} title=\"client\" name=\"client\" className=\"form-control\">\n                                            <option value=\"\">Select Client</option>\n                                            {clients.length > 0 && clients.map(function(client,index){\n                                                return <option value={client.ClientName}>{client.ClientName}</option>\n                                            })}\n                                        </select>\n                                        <p className=\"text-danger\">{projectError.client}</p>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group row\">\n                                    <label className=\"col-md-2 col-form-label\">Description*:</label>\n                                    <div className=\"col-md-10\">\n                        <textarea title=\"Project Description\" placeholder=\"Enter Project Description\"  onChange={(e) => handleChange(e)}\n                                  className={projectError.description.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"textarea\" rows=\"5\" title=\"description\" name=\"description\" id=\"description\"/>\n                                        <p className=\"text-danger\">{projectError.description}</p>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group row\">\n                                    <label className=\"col-md-2 col-form-label\">Hourly Rates*:</label>\n                                    <div className=\"col-md-10\">\n                                        <input title=\"Hourly Rates\" min=\"0\" placeholder=\"Enter Decided Hourly Rates\" onChange={(e) => handleChange(e)} className={projectError.rate.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"number\" name=\"rate\" id=\"rate\"/>\n                                        <p className=\"text-danger\">{projectError.rate}</p>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group row\">\n                                    <label className=\"col-md-2 col-form-label\">Invoice Duration:</label>\n                                    <div className=\"col-md-10\">\n                                        <select title=\"Invoice Duration\" onChange={(e) => handleChange(e)} className={projectError.invoice.length > 0 ? \"is-invalid form-control\" : \"form-control\"} name=\"invoice\" title=\"invoice\" className=\"form-control\">\n                                            <option value=\"\">Select Invoice Duration</option>\n                                            <option value=\"Daily\">Daily</option>\n                                            <option value=\"Weekly\">Weekly</option>\n                                            <option value=\"Monthly\">Monthly</option>\n                                        </select>\n                                        <p className=\"text-danger\">{projectError.invoice}</p>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group row\">\n                                    <label className=\"col-md-2 col-form-label\">Project Status:</label>\n                                    <div className=\"col-md-10\">\n                                        <select title=\"Project Status\" onChange={(e) => handleChange(e)} className={projectError.status.length > 0 ? \"is-invalid form-control\" : \"form-control\"} name=\"status\" title=\"status\" className=\"form-control\">\n                                            <option value=\"\">Select Project Status</option>\n                                            <option value=\"In Progress\">In Progress</option>\n                                            <option value=\"Pending\">Pending</option>\n                                            <option value=\"Completed\">Completed</option>\n                                        </select>\n                                        <p className=\"text-danger\">{projectError.status}</p>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group row\">\n                                    <div className=\"col-md-5\"></div>\n                                    <div className=\"col-md-2\">\n                                        <button type=\"submit\" title=\"Submit\" className=\"btn btn-primary\">Submit</button>\n                                    </div>\n                                    <div className=\"col-md-2\">\n                                        <button type=\"button\" title=\"Cancel\" onClick={cancel} className=\"btn btn-danger\">Cancel</button>\n                                    </div>\n                                    <div className=\"col-md-3\"></div>\n                                </div>\n                            </center></form>\n                        </Col>\n                    </Row>\n                </div>\n            </div>\n        </div>\n    )}","/**\n * Author: Sanket Shah.\n * Created On: 2021-07-20\n * Listing File for Projects.\n */\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport AddProject from './Projects/AddProject';\nimport Datatable from \"../components/Datatable\";\nimport '../styles/style.scss';\nimport { Button, Card, Col, Container, Form, Modal, Row } from \"react-bootstrap\";\nimport { Redirect, useHistory } from 'react-router-dom';\nimport projectsServices from '../services/projectsServices.js'\nimport \"../styles/Projects.scss\";\n\n/**\n *  Functionality for listing down the list of projects\n */\nexport default function Projects() {\n\n    const columns = [\n        { Header: 'Project Title', accessor: 'title' },\n        { Header: 'Description', accessor: 'description' },\n        { Header: 'Client Name', accessor: 'client' },\n        { Header: 'Status', accessor: 'status' },\n        {\n            Header: 'Actions', accessor: 'row',\n            Cell: ({ row }) => (<div className=\"data-table-button\"><a title=\"Edit Project\" onClick={() => editProject(row.original._id)} className=\"secondary-button\">Edit</a><a title=\"Delete Project\" onClick={() => { deleteTask(row.original) }} className=\"delete-button\">Delete</a></div>)\n        }\n    ];\n\n    const [data, setData] = useState([]);\n    useEffect(() => {\n        projectsServices.list({\"userId\": localStorage.getItem(\"user_id\")}).then(res => setData(res.data));\n    },[]);\n\n    const deleteTask = (project) => {\n        if (window.confirm(\"Are you sure?\")) {\n            let newData = [...data];\n            projectsServices.remove(project).then(res => alert(res.message));\n            projectsServices.list().then(res => setData(res.data));\n        }\n    };\n\n    const [checkForm, setCheckForm] = useState(true);\n\n    const validate = () => {\n        setCheckForm(false);\n    }\n\n    const history = useHistory();\n\n    async function editProject(id) {\n        let url = \"/projects/edit/\" + id;\n        history.push(url);\n    }\n\n    return (\n        <div className=\"page-container projects-container\">\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Projects\" />\n            </div>\n            <div className=\"page-content-container\">\n            <div className=\"page-content\">\n                <Row className=\"button-container\">\n                    <Col className=\"text-right\">\n                        <a href=\"/projects/add\" title=\"Add Project\" className=\"btn primary-button\">Add Project</a>\n                    </Col>\n                </Row>\n                <Row className=\"data-table-container\">\n                    <Col>\n                        <Datatable columns={columns} data={data} />\n                    </Col>\n                </Row>\n                </div>\n            </div>\n        </div>\n    )\n}","/**\n * Author: Sanket Shah.\n * Created On: 2021-07-20\n * Edit File for Projects.\n */\n\nimport {useState, useEffect, React} from 'react';\nimport PageHeader from \"../../components/PageHeader\";\nimport { useParams, useHistory } from 'react-router-dom';\nimport projectsServices from '../../services/projectsServices';\nimport clientsServices from '../../services/clientsServices';\nimport {Col, Row} from \"react-bootstrap\";\n\n/**\n *  Functionality for editing the project\n */\nconst EditProjects = (prop) => {\n\n    const param = useParams();\n\n    const history = useHistory();\n\n    async function cancel() {\n        let url = \"/projects\";\n        history.push(url);\n    }\n\n    const params = history.location.pathname.split('/');\n\n    const [project, setProject] = useState({\n        title: \"\",\n        client: \"\",\n        description: \"\",\n        invoice: \"\",\n        rate: \"\",\n        status: \"\"\n    });\n\n    const [clients, setClient] = useState({\n        ClientName : \"\"\n    });\n\n    useEffect(() => {\n        clientsServices.list().then(res => setClient(res.data));\n        projectsServices.get(params[params.length-1]).then(res => setProject(res.data));\n    },[]);\n\n    const [projectError, setProjectError] = useState({\n        title: \"\",\n        client: \"\",\n        description: \"\",\n        invoice: \"\",\n        rate: \"\",\n        status: \"\"\n    });\n\n    const handleChange = (e) => {\n        let newProject = {...project, [e.target.name]: e.target.value};\n        setProject(newProject);\n    };\n\n    const isProjectValid = (e) => {\n        e.preventDefault();\n        let valid = true;\n        setProjectError({\n            title: \"\",\n            client: \"\",\n            description: \"\",\n            invoice: \"\",\n            rate: \"\",\n            status: \"\"\n        });\n        let newProjectError = {...projectError};\n\n        if(!project.title.length > 0){\n            newProjectError.title = \"Project Title is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.title = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.client.length > 0){\n            newProjectError.client = \"Client Name is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.client = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.description.length > 0){\n            newProjectError.description = \"Project Description is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.description = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.invoice.length > 0){\n            newProjectError.invoice = \"Invoice Duration is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.invoice = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(!project.status.length > 0){\n            newProjectError.status = \"Project Status is required\";\n            setProjectError(newProjectError);\n            valid = false;\n        }\n        else{\n            newProjectError.status = \"\";\n            setProjectError(newProjectError);\n        }\n\n        if(valid === true){\n            projectsServices.update(project).then(res => res);\n            history.push('/projects');\n        }\n        return valid;\n    };\n\n    return (\n        <div className=\"page-container\">\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Edit Projects\" />\n            </div>\n            <div className=\"page-content-container\">\n                <div className=\"page-content\">\n                    <Row>\n                        <Col>\n                            <form onSubmit={(e) => isProjectValid(e)}>\n                                <div className=\"form-group row\">\n                                    <label className=\"col-md-2 col-form-label\">Project Title*: </label>\n                                    <div className=\"col-md-10\">\n                                        <input title=\"Project Title\" placeholder=\"Enter Project Title\" onChange={(e) => handleChange(e)}\n                                               className={projectError.title.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"text\" value={project.title.length > 0 && project.title} name=\"title\" id=\"title\"/>\n                                        <p className=\"text-danger\">{projectError.title}</p>\n                                    </div>\n                                </div>\n                                <div className=\"form-group row\">\n                                    <label className=\"col-md-2 col-form-label\">Client Name:</label>\n                                    <div className=\"col-md-10\">\n                                        <select title=\"Client Name\" onChange={(e) => handleChange(e)}\n                                                className={projectError.client.length > 0 ? \"is-invalid form-control\" : \"form-control\"} title=\"client\" name=\"client\" className=\"form-control\">\n                                            <option value=\"\">Select Client</option>\n                                            {clients.length > 0 && clients.map(function(client,index){\n                                                return <option value={client.ClientName} selected={client.ClientName === project.client ? \"true\":\"false\"}>{client.ClientName}</option>\n                                            })}\n                                        </select>\n                                        <p className=\"text-danger\">{projectError.client}</p>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group row\">\n                                    <label className=\"col-md-2 col-form-label\">Description*:</label>\n                                    <div className=\"col-md-10\">\n                        <textarea title=\"Project Description\" placeholder=\"Enter Project Description\"  onChange={(e) => handleChange(e)}\n                                  className={projectError.description.length > 0 ? \"is-invalid form-control\" : \"form-control\"} value={project.description} type=\"textarea\" rows=\"5\" title=\"description\" name=\"description\" id=\"description\"/>\n                                        <p className=\"text-danger\">{projectError.description}</p>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group row\">\n                                    <label className=\"col-md-2 col-form-label\">Hourly Rates*:</label>\n                                    <div className=\"col-md-10\">\n                                        <input title=\"Hourly Rates\" min=\"0\" placeholder=\"Enter Decided Hourly Rates\" onChange={(e) => handleChange(e)} value={project.rate} className={projectError.rate.length > 0 ? \"is-invalid form-control\" : \"form-control\"} type=\"number\" name=\"rate\" id=\"rate\"/>\n                                        <p className=\"text-danger\">{projectError.rate}</p>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group row\">\n                                    <label className=\"col-md-2 col-form-label\">Invoice Duration:</label>\n                                    <div className=\"col-md-10\">\n                                        <select title=\"Invoice Duration\" onChange={(e) => handleChange(e)} className={projectError.invoice.length > 0 ? \"is-invalid form-control\" : \"form-control\"} name=\"invoice\" title=\"invoice\" className=\"form-control\">\n                                            <option value=\"\">Select Invoice Duration</option>\n                                            <option value=\"Daily\" selected={project.invoice === \"Daily\" ? \"true\":\"false\"}>Daily</option>\n                                            <option value=\"Weekly\" selected={project.invoice === \"Weekly\" ? \"true\":\"false\"}>Weekly</option>\n                                            <option value=\"Monthly\" selected={project.invoice === \"Monthly\" ? \"true\":\"false\"}>Monthly</option>\n                                        </select>\n                                        <p className=\"text-danger\">{projectError.invoice}</p>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group row\">\n                                    <label className=\"col-md-2 col-form-label\">Project Status:</label>\n                                    <div className=\"col-md-10\">\n                                        <select title=\"Project Status\" onChange={(e) => handleChange(e)} className={projectError.status.length > 0 ? \"is-invalid form-control\" : \"form-control\"} name=\"status\" title=\"status\" className=\"form-control\">\n                                            <option value=\"\">Select Project Status</option>\n                                            <option value=\"In Progress\" selected={project.status === \"In Progress\" ? \"true\":\"false\"}>In Progress</option>\n                                            <option value=\"Pending\" selected={project.status === \"Pending\" ? \"true\":\"false\"}>Pending</option>\n                                            <option value=\"Completed\" selected={project.status === \"Completed\" ? \"true\":\"false\"}>Completed</option>\n                                        </select>\n                                        <p className=\"text-danger\">{projectError.status}</p>\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group row\">\n                                    <div className=\"col-md-5\"></div>\n                                    <div className=\"col-md-2\">\n                                        <button type=\"submit\" title=\"Submit\" className=\"btn btn-primary\">Submit</button>\n                                    </div>\n                                    <div className=\"col-md-2\">\n                                        <button type=\"button\" title=\"Cancel\" onClick={cancel} className=\"btn btn-danger\">Cancel</button>\n                                    </div>\n                                    <div className=\"col-md-3\"></div>\n                                </div>\n                            </form>\n                        </Col>\n                    </Row>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default EditProjects;","/**\n * Author: Janvi Patel.\n * Created On: 2021-06-07\n * Add Client details.\n */\nimport React, { Component } from 'react';\nimport PageHeader from \"../../components/PageHeader\";\nimport { withRouter } from 'react-router-dom';\nimport \"../../styles/AddClient.scss\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { curl_init } from 'react';\nimport { curl_getinfo } from 'react';\nimport { CURLINFO_HTTP_CODE } from 'react';\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\nimport clientService from \"../../services/clientService\"\n\nexport class AddClient extends Component {\n\n    //constructor for props\n    constructor(props) {\n        super(props)\n        console.log(props);\n        this.state = {\n            clientName: \"\",\n            clientNameError: \"\",\n            organizationName: \"\",\n            organizationNameError: \"\",\n            contactNo: \"\",\n            contactNoError: \"\",\n            websiteName: \"\",\n            websiteNameError: \"\",\n            linkedInProfile: \"\",\n            linkedInProfileError: \"\",\n            emailId: \"\",\n            emailIdError: \"\",\n            street: \"\",\n            streetError: \"\",\n            businessDescription: \"\",\n            postalCode: \"\",\n            PostalCodeError: \"\",\n            meetingPlatform: \"\",\n            meetingPlatformError: \"\",\n            country: \"\",\n            region: \"\",\n            userId: props.location.userId\n        }\n    }\n\n    /**\n     * On mount, set the values of table.\n     * @param {*} event \n    */\n    onValueChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    /**\n     * On mount, set the values of table.\n     * @param {*} event \n    */\n    selectCountry(val) {\n        this.setState({ country: val });\n    }\n\n    /**\n     * On mount, set the values of table.\n     * @param {*} event \n    */\n    selectRegion(val) {\n        this.setState({ region: val });\n    }\n\n    /**\n     * validate client name is null or not\n     * @param {*} event \n    */\n    validateClient = (event) => {\n        let isValid = true;\n        if (!this.state.clientName) {\n            this.setState({ clientNameError: \"Client Name is required\" })\n            isValid = false;\n        }\n        else {\n            this.setState({ clientNameError: \"\" })\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate organization is null or not\n     * @param {*} event \n    */\n    validateOrganization = (event) => {\n        let isValid = true;\n        if (!this.state.organizationName) {\n            this.setState({ organizationNameError: \"Organization Name is required\" })\n            isValid = false;\n        }\n        else {\n            this.setState({ organizationNameError: \"\" })\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate contactNo with numbers and contact no is null or not\n     * @param {*} event \n    */    \n    validateContactNo = (event) => {\n        let isValid = true;\n        if (!this.state.contactNo) {\n            this.setState({ contactNoError: \"Contact No is required\" })\n            isValid = false;\n        }\n        var pattern = new RegExp(/^[0-9\\b]+$/);\n        const result = pattern.test(this.state.contactNo);\n        if (result === false) {\n            this.setState({\n                isValid: false,\n                contactNoError: \"Contact No is invalid: can contain Number and contry code only\"\n            })\n        }\n        else {\n            this.setState({ contactNoError: \"\" })\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate website name with pattern and website is null or not\n     * @param {*} event \n    */\n    validateWebsiteName = (event) => {\n        let isValid = true;\n\n        if(this.state.websiteName){\n            const pattern = /^(?:(?:(?:[a-zA-z\\-]+)\\:\\/{1,3})?(?:[a-zA-Z0-9])(?:[a-zA-Z0-9\\-\\.]){1,61}(?:\\.[a-zA-Z]{2,})+|\\[(?:(?:(?:[a-fA-F0-9]){1,4})(?::(?:[a-fA-F0-9]){1,4}){7}|::1|::)\\]|(?:(?:[0-9]{1,3})(?:\\.[0-9]{1,3}){3}))(?:\\:[0-9]{1,5})?$/g;\n            const result = pattern.test(this.state.websiteName);\n            if (result === false) {\n                this.setState({\n                    isValid: false,\n                    websiteNameError: \"Provided website is invalid: should contain domain name\"\n                })\n            }\n            else {\n                this.setState({ websiteNameError: \"\" })\n            }\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate email id with pattern \n     * @param {*} event \n    */\n    validateEmailId = (event) => {\n        let isValid = true;\n        if (!this.state.emailId) {\n            this.setState({ emailIdError: \"Email Id is required\" })\n            isValid = false;\n        }\n        const pattern = /[a-zA-Z0-9]+[\\.]?([a-zA-Z0-9]+)?[\\@][a-z]{3,9}[\\.][a-z]{2,5}/g;\n        const result = pattern.test(this.state.emailId);\n        if (result === false) {\n            this.setState({\n                isValid: false,\n                emailIdError: \"Provided email Id is invalid: should contain '@' and domain name\"\n            })\n        } else {\n            this.setState({ emailIdError: \"\" })\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate linkedin profile with pattern \n     * @param {*} event \n    */\n    validateLinkedInProfile = (event) => {\n\n        let isValid = true;\n        if(this.state.linkedInProfile){\n\n            const pattern = /(ftp|http|https):\\/\\/?(?:www\\.)?linkedin.com(\\w+:{0,1}\\w*@)?(\\S+)(:([0-9])+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g;\n            const result = pattern.test(this.state.linkedInProfile);\n            if (result === false) {\n                this.setState({\n                    isValid: false,\n                    linkedInProfileError: \"LinkedIn Profile is not valid\"\n                })\n            } else {\n                this.setState({ linkedInProfileError: \"\" })\n            }\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate street with pattern \n     * @param {*} event \n    */\n    validateStreet = (event) => {\n        let isValid = true;\n        if(this.state.street){\n\n            const pattern = /[a-zA-Z0-9]/g;\n            const result = pattern.test(this.state.street);\n            if (result === false) {\n                this.setState({\n                    isValid: false,\n                    streetError: \"Street should not contain special characters\"\n                })\n            }\n            else {\n                this.setState({ streetError: \"\" })\n            }\n        }   \n        return isValid;\n    }\n\n    /**\n     * Validate postal code with pattern \n     * @param {*} event \n    */\n    validatePostalcode = (event) => {\n        let isValid = true;\n        if(this.state.postalCode){\n            const pattern = /[a-zA-Z0-9]/g;\n            const result = pattern.test(this.state.postalCode);\n            if (result === false) {\n                this.setState({\n                    isValid: false,\n                    PostalCodeError: \"Postal code should not contain special characters\"\n                })\n            }\n            else {\n                this.setState({ PostalCodeError: \"\" })\n            }\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate meeting platform with pattern \n     * @param {*} event \n    */\n    validateMeetingPlatform = (event) => {\n        let isValid = true;\n        if (!this.state.meetingPlatform) {\n            this.setState({ meetingPlatformError: \"Meeting Platform is required\" })\n            isValid = false;\n        }\n        else {\n            this.setState({ meetingPlatformError: \"\" })\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate form \n     * @param {*} event \n    */\n    validateForm = (event) => {\n        let isValid = true\n        if (!this.validateClient()) {\n            isValid = false;\n        }\n        if (!this.validateOrganization()) {\n            isValid = false;\n        }\n        if (!this.validateContactNo()) {\n            isValid = false;\n        }\n        if (!this.validateWebsiteName()) {\n            isValid = false;\n        }\n        if (!this.validateEmailId()) {\n            isValid = false;\n        }\n        if (!this.validateLinkedInProfile()) {\n            isValid = false;\n        }\n        if (!this.validateStreet()) {\n            isValid = false;\n        }\n        if (!this.validatePostalcode()) {\n            isValid = false;\n        }\n        if (!this.validateMeetingPlatform()) {\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    /**\n     * On submit new client will be added and the api call will be made\n     * @param {*} event \n    */\n    onSubmit = (event) => {\n        event.preventDefault();\n        clientService.addNewClient(this.state).then((response) => {\n            if (this.validateForm()) {\n                alert(\"Details Successfully Saved!!\");\n            }\n            this.props.history.push({ pathname: '/clients' });\n        }).catch((error) => {\n            alert(\"Duplicate details found!!\");\n            console.log(\"Eroor\")\n        })\n    }\n\n    /**\n     * On click back the clients page will be redirected\n     * @param {*} event \n    */\n    onClickBack = (event) => {\n        event.preventDefault();\n        this.props.history.push({ pathname: '/clients' });\n    }\n\n    render() {\n        return (\n            <div className=\"page-container add-client-container\">\n                <div className=\"page-header-container\">\n                    <PageHeader title=\"New Client\" subtitle=\"\" />\n                </div>\n                <div className=\"page-content-container\">\n                    <div className=\"page-content\">\n                        <Row className=\"add-client-content\">\n                            <Col>\n                                <Form>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Client Name</Form.Label>\n                                                <Form.Control type=\"name\" name=\"clientName\" placeholder=\"Enter Client Name\" value={this.state.ClientName} onChange={this.onValueChange}\n                                                    onBlur={this.validateClientName}\n                                                    isInvalid={this.state.clientNameError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.clientNameError}\n                                                </Form.Control.Feedback>\n\n                                            </Form.Group>\n                                        </Col>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Organization</Form.Label>\n                                                <Form.Control type=\"name\" name=\"organizationName\" placeholder=\"Enter Organization Name\" value={this.state.OrganizationName} onChange={this.onValueChange}\n                                                    onBlur={this.validateOrganization}\n                                                    isInvalid={this.state.organizationNameError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.organizationNameError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Contact No</Form.Label>\n                                                <Form.Control type=\"name\" name=\"contactNo\" placeholder=\"Enter Contact No\" value={this.state.ContactNo} onChange={this.onValueChange}\n                                                    onBlur={this.validateContactNo}\n                                                    isInvalid={this.state.contactNoError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.contactNoError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Website</Form.Label>\n                                                <Form.Control type=\"name\" name=\"websiteName\" placeholder=\"Enter Website Name\" value={this.state.WebsiteName} onChange={this.onValueChange}\n                                                    onBlur={this.validateWebsiteName}\n                                                    isInvalid={this.state.websiteNameError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.websiteNameError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Email</Form.Label>\n                                                <Form.Control type=\"name\" name=\"emailId\" placeholder=\"Enter Email Id\" value={this.state.EmailId} onChange={this.onValueChange}\n                                                    onBlur={this.validateEmailId}\n                                                    isInvalid={this.state.emailIdError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.emailIdError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>LinkedIn Profile</Form.Label>\n                                                <Form.Control type=\"name\" name=\"linkedInProfile\" placeholder=\"Enter Linkedin Profile\" value={this.state.linkedInProfile} onChange={this.onValueChange}\n                                                    onBlur={this.validateLinkedInProfile}\n                                                    isInvalid={this.state.linkedInProfileError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.linkedInProfileError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Street</Form.Label>\n                                                <Form.Control type=\"name\" name=\"street\" placeholder=\"Enter Street Name\" value={this.state.Street} onChange={this.onValueChange}\n                                                    onBlur={this.validateStreet}\n                                                    isInvalid={this.state.streetError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.streetError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Business Description</Form.Label>\n                                                <Form.Control type=\"name\" name=\"businessDescription\" placeholder=\"Enter Business Description\" value={this.state.BusinessDescription} onChange={this.onValueChange}\n                                                    onBlur={this.validatebusinessDescription}\n                                                />\n\n                                            </Form.Group>\n                                        </Col>\n\n                                    </Row>\n\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Postal Code</Form.Label>\n                                                <Form.Control type=\"name\" name=\"postalCode\" placeholder=\"Enter Postal code\" value={this.state.PostalCode} onChange={this.onValueChange}\n                                                    onBlur={this.validatePostalcode}\n                                                    isInvalid={this.state.PostalCodeError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.PostalCodeError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Meeting Platform</Form.Label>\n                                                <Form.Control as=\"select\" name=\"meetingPlatform\" placeholder=\"Enter meeting platform\" value={this.state.MeetingPlatform} onChange={this.onValueChange}\n                                                    onBlur={this.validateMeetingPlatform}\n                                                    isInvalid={this.state.meetingPlatformError}>\n                                                    <option>Select Project</option>\n                                                    <option value=\"Google Meet\">Google Meet</option>\n                                                    <option value=\"Skype\">Skype</option>\n                                                    <option value=\"Zoom\">Zoom</option>\n                                                    <option value=\"In Person\">In person</option>\n                                                </Form.Control>\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.meetingPlatformError}\n                                                </Form.Control.Feedback>\n\n\n                                            </Form.Group>\n                                        </Col>\n\n                                    </Row>\n                                    <Row>\n                                        <Col xs={6}>\n                                            <Form.Group>\n                                                <div className=\"country\">\n                                                    <Form.Label className=\"required\">Country </Form.Label>\n                                                    <CountryDropdown as=\"select\" name=\"country\" defaultOptionLabel=\"Select country\" value={this.state.country}\n                                                        onChange={(value) => this.selectCountry(value)}\n                                                    />\n                                                </div>\n                                                <div className=\"region\">\n                                                    <Form.Label>Region </Form.Label>\n                                                    <RegionDropdown\n                                                        country={this.state.country} blankOptionLabel=\"No Country Selected\" defaultOptionLabel=\"Select region\"\n                                                        as=\"select\" name=\"region\" value={this.state.region} onChange={(value) => this.selectRegion(value)}>\n                                                    </RegionDropdown>\n                                                </div>\n                                            </Form.Group>\n                                        </Col>\n\n                                    </Row>\n\n                                    <Row className=\"generate-button-container\">\n                                        <Button className=\"primary-button\" onClick={this.onSubmit}>\n                                            Submit\n                                        </Button>\n                                        <Button className=\"primary-button\" onClick={this.onClickBack}>\n                                            Back\n                                        </Button>\n                                    </Row>\n                                </Form>\n                            </Col>\n                        </Row>\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(AddClient);","/**\n * Author: Janvi Patel.\n * Created On: 2021-06-07\n * Clients details.\n */\n\nimport React from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport Datatable from \"../components/Datatable\";\nimport {\n  withRouter\n} from \"react-router-dom\";\nimport { Button, Col, Row } from \"react-bootstrap\";\nimport \"../styles/Clients.scss\";\nimport './Clients/AddClient'\nimport { Component } from \"react\";\nimport axios from 'axios';\nimport clientService from \"../services/clientService\"\n\n\nexport class Clients extends Component {\n  \n  //constructor for props\n  constructor(props) {\n    super(props);\n    this.state = {\n      data : [],\n      ClientName: \"\",\n      Organization: \"\",\n      ContactNo: \"\",\n      Emailid: \"\"\n    }\n    this.handleNewClient = this.handleNewClient.bind(this);\n\n    this.columns = [\n      { Header: 'Client Name', accessor: 'ClientName' },\n      { Header: 'Contact No', accessor: 'ContactNo' },\n      { Header: 'Email', accessor: 'Emailid' },\n      { Header: 'Website', accessor: 'Website' },\n      {\n        Header: 'Action', accessor: 'row',\n        Cell: ({ row }) => (\n          \n          <div className=\"generate-button-container\">\n            <Button className=\"secondary-button\" align=\"right\" onClick={() => this.viewDetails(row)} >View</Button>\n            <Button className=\"secondary-button\" align=\"right\"  onClick={() => this.editDetails(row)} >Edit</Button>\n            <Button className=\"delete-button\" align=\"right\"  onClick={() => this.deleteDetails(row)} >Delete</Button>\n          </div>\n        )\n      }]; \n\n      this.userId = localStorage.getItem(\"user_id\")\n  }\n\n  /**\n     * On mount, set the values of table.\n     * @param {*} event \n  */\n  componentDidMount() {\n    \n    clientService.getAllClients(this.userId).then((response) => {\n        if (response.status == 200) {\n            this.setData(response.data);\n            let newDetails = [];\n            response.data.forEach(element => {\n              let row = {}\n              row.ClientName = element.ClientName;\n              row.ContactNo = element.ContactNo;\n              row.Emailid = element.Email;\n              row.Website = element.Website;\n              newDetails.push(row)\n            });\n            this.setState({\n              data: newDetails\n            })\n        }\n    }).catch((error) => {\n        console.log(error)\n    })\n\n  }\n\n  /**\n     * On click of view details select view client API call\n     * @param {*} event \n  */\n  viewDetails = (row) => {\n\n    clientService.viewOneClient(row.original).then((response) => {  \n        this.props.history.push({ pathname: '/ViewClient' }, {\n          state: response.data\n        })\n    }).catch((error) => {\n        console.log(error)\n    })\n  }\n\n   /**\n     * On click of edit details edit client API call\n     * @param {*} event \n  */\n  editDetails = (row) => {\n    clientService.viewOneClient(row.original).then((response) => {  \n        this.props.history.push({ pathname: '/EditClient' }, {\n          state: response.data\n        })\n    }).catch((error) => {\n        console.log(error)\n    })\n  };\n\n  /**\n     * On click of delete details delete client API call and set table\n     * @param {*} event \n  */\n  deleteDetails = (row) => {\n    clientService.deleteClient(row.original).then((response) => {\n          alert(\"Successfully deleted entry!!\");\n          clientService.getAllClients().then((response) => {\n              if (response.status == 200) {\n                  this.setData(response.data);\n                  let newdetails = [];\n                  response.data.forEach(element => {\n                    let row = {}\n                    row.ClientName = element.ClientName;\n                    row.ContactNo = element.ContactNo;\n                    row.Emailid = element.Email;\n                    row.Website = element.Website;\n                    newdetails.push(row)\n                  });\n                  this.setState({data: newdetails})\n                }\n          }).catch((error) => {\n              console.log(error)\n          })\n      }).catch((error) => {\n          console.log(error)\n      })\n  }\n\n  setData = (response) => {\n    this.data = []\n  }\n\n  /**\n     * On click of handle new client add new client detail redirected\n     * @param {*} event \n  */\n  handleNewClient = (e) => {\n    e.preventDefault();\n    this.props.history.push({ pathname: '/clients/add', \n                              userId: this.userId});\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"page-container clients-container\">\n          <div className=\"page-header-container\">\n            <PageHeader title=\"Clients\" subtitle=\"\" />\n          </div>\n          <div className=\"page-content-container\">\n            <div className=\"page-content\">\n              <Row className=\"button-container\">\n                <Col>\n                  <Button className=\"primary-button\" type=\"button\" align=\"right\" onClick={this.handleNewClient} >Add New</Button>\n                </Col>\n              </Row>\n              <Row className=\"data-table-container\">\n                <Col>\n                  <Datatable columns={this.columns} data={this.state.data} />\n                </Col>\n              </Row>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Clients);\n","/**\n * Author: Janvi Patel.\n * Created On: 2021-06-07\n * Edit Client details.\n */\nimport React, { Component } from 'react';\nimport PageHeader from \"../../components/PageHeader\";\nimport { withRouter } from 'react-router-dom';\nimport \"../../styles/AddClient.scss\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\nimport clientService from \"../../services/clientService\";\n\nexport class EditClient extends Component\n{\n    //constructor for props\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            clientId: props.history.location.state.state.ClientId,\n            clientName: props.history.location.state.state.ClientName,\n            clientNameError: \"\",\n            organizationName: props.history.location.state.state.Organization,\n            organizationNameError: \"\",\n            contactNo: props.history.location.state.state.ContactNo,\n            contactNoError: \"\",\n            websiteName: props.history.location.state.state.Website,\n            websiteNameError: \"\",\n            emailId: props.history.location.state.state.Email,\n            emailIdError: \"\",\n            linkedInProfile: props.history.location.state.state.LinkedInProfile,\n            linkedInProfileError: \"\",\n            street: props.history.location.state.state.Street,\n            streetError: \"\",\n            businessDescription: props.history.location.state.state.BusinessDescription,\n            postalCode: props.history.location.state.state.PostalCode,\n            PostalCodeError: \"\",\n            meetingPlatform: props.history.location.state.state.MeetingPlatform,\n            meetingPlatformError: \"\",\n            country: props.history.location.state.state.Country,\n            region: props.history.location.state.state.Region\n        }       \n    }\n\n    /**\n     * On mount, set the values of table.\n     * @param {*} event \n    */\n    onValueChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    /**\n     * On mount, set the values of table.\n     * @param {*} event \n    */\n    selectCountry (name, val) {\n      this.setState({  name: val });\n    }\n  \n    /**\n     * On mount, set the values of table.\n     * @param {*} event \n    */\n    selectRegion (val) {\n      this.setState({ name: val });\n    }\n\n    /**\n     * validate client name is null or not\n     * @param {*} event \n    */\n    validateClient = (event) => {\n        let isValid = true;\n        if (!this.state.clientName) {\n            this.setState({ clientNameError: \"Client Name is required\" })\n            isValid = false;\n        }\n        else {\n            this.setState({ clientNameError: \"\" })\n        }\n        return isValid;\n    }\n\n     /**\n     * Validate organization is null or not\n     * @param {*} event \n    */\n    validateOrganization = (event) => {\n        let isValid = true;\n        if (!this.state.organizationName) {\n            this.setState({ organizationNameError: \"Organization Name is required\" })\n            isValid = false;\n        }\n        else {\n            this.setState({ organizationNameError: \"\" })\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate contactNo with numbers and contact no is null or not\n     * @param {*} event \n    */\n    validateContactNo = (event) => {\n        let isValid = true;\n        if (!this.state.contactNo) {\n            this.setState({ contactNoError: \"Contact No is required\" })\n            isValid = false;\n        }\n        var pattern = new RegExp(/^[0-9\\b]+$/);\n        const result = pattern.test(this.state.contactNo);\n        if (result === false) {\n            this.setState({\n                isValid: false,\n                contactNoError: \"Contact No is invalid: can contain Number and contry code only\"\n            })\n        }\n        else {\n            this.setState({ contactNoError: \"\" })\n        }\n        return isValid;\n    }\n\n     /**\n     * Validate website name with pattern and website is null or not\n     * @param {*} event \n    */\n    validateWebsiteName = (event) => {\n        let isValid = true;\n\n        if(this.state.websiteName){\n            const pattern = /^(?:(?:(?:[a-zA-z\\-]+)\\:\\/{1,3})?(?:[a-zA-Z0-9])(?:[a-zA-Z0-9\\-\\.]){1,61}(?:\\.[a-zA-Z]{2,})+|\\[(?:(?:(?:[a-fA-F0-9]){1,4})(?::(?:[a-fA-F0-9]){1,4}){7}|::1|::)\\]|(?:(?:[0-9]{1,3})(?:\\.[0-9]{1,3}){3}))(?:\\:[0-9]{1,5})?$/g;\n            const result = pattern.test(this.state.websiteName);\n            if (result === false) {\n                this.setState({\n                    isValid: false,\n                    websiteNameError: \"Provided website is invalid: should contain domain name\"\n                })\n            }\n            else {\n                this.setState({ websiteNameError: \"\" })\n            }\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate email id with pattern \n     * @param {*} event \n    */\n    validateEmailId = (event) => {\n        let isValid = true;\n        if (!this.state.emailId) {\n            this.setState({ emailIdError: \"Email Id is required\" })\n            isValid = false;\n        }\n        const pattern = /[a-zA-Z0-9]+[\\.]?([a-zA-Z0-9]+)?[\\@][a-z]{3,9}[\\.][a-z]{2,5}/g;\n        const result = pattern.test(this.state.emailId);\n        if (result === false) {\n            this.setState({\n                isValid: false,\n                emailIdError: \"Provided email Id is invalid: should contain '@' and domain name\"\n            })\n        } else {\n            this.setState({ emailIdError: \"\" })\n        }\n        return isValid;\n    }\n\n      /**\n     * Validate linkedin profile with pattern \n     * @param {*} event \n    */\n    validateLinkedInProfile = (event) => {\n\n        let isValid = true;\n        if(this.state.linkedInProfile){\n\n            const pattern = /(ftp|http|https):\\/\\/?(?:www\\.)?linkedin.com(\\w+:{0,1}\\w*@)?(\\S+)(:([0-9])+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/g;\n            const result = pattern.test(this.state.linkedInProfile);\n            if (result === false) {\n                this.setState({\n                    isValid: false,\n                    linkedInProfileError: \"LinkedIn Profile is not valid\"\n                })\n            } else {\n                this.setState({ linkedInProfileError: \"\" })\n            }\n        }\n        return isValid;\n    }\n\n     /**\n     * Validate street with pattern \n     * @param {*} event \n    */\n    validateStreet = (event) => {\n        let isValid = true;\n        if(this.state.street){\n\n            const pattern = /[a-zA-Z0-9]/g;\n            const result = pattern.test(this.state.street);\n            if (result === false) {\n                this.setState({\n                    isValid: false,\n                    streetError: \"Street should not contain special characters\"\n                })\n            }\n            else {\n                this.setState({ streetError: \"\" })\n            }\n        }   \n        return isValid;\n    }\n\n    /**\n     * Validate postal code with pattern \n     * @param {*} event \n    */\n    validatePostalcode = (event) => {\n        let isValid = true;\n        if(this.state.postalCode){\n            const pattern = /[a-zA-Z0-9]/g;\n            const result = pattern.test(this.state.postalCode);\n            if (result === false) {\n                this.setState({\n                    isValid: false,\n                    PostalCodeError: \"Postal code should not contain special characters\"\n                })\n            }\n            else {\n                this.setState({ PostalCodeError: \"\" })\n            }\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate meeting platform with pattern \n     * @param {*} event \n    */\n    validateMeetingPlatform = (event) => {\n        let isValid = true;\n        if (!this.state.meetingPlatform) {\n            this.setState({ meetingPlatformError: \"Meeting Platform is required\" })\n            isValid = false;\n        }\n        else {\n            this.setState({ meetingPlatformError: \"\" })\n        }\n        return isValid;\n    }\n\n    /**\n     * Validate form \n     * @param {*} event \n    */\n    validateForm = (event) => {\n        let isValid = true\n        if (!this.validateClient()) {\n            isValid = false;\n        }\n        if (!this.validateOrganization()) {\n            isValid = false;\n        }\n        if (!this.validateContactNo()) {\n            isValid = false;\n        }\n        if (!this.validateWebsiteName()) {\n            isValid = false;\n        }\n        if (!this.validateEmailId()) {\n            isValid = false;\n        }\n        if (!this.validateLinkedInProfile()) {\n            isValid = false;\n        }\n        if (!this.validateStreet()) {\n            isValid = false;\n        }\n        if (!this.validatePostalcode()) {\n            isValid = false;\n        }\n        if (!this.validateMeetingPlatform()) {\n            isValid = false;\n        }\n        return isValid;\n    }\n\n    /**\n     * On Update client will be updated and the api call will be made\n     * @param {*} event \n    */\n    onUpdate = (event) => {\n        event.preventDefault();\n        if (this.validateForm()) {\n            clientService.editClient(this.state).then((response) => {\n            }).catch((error) => {\n                console.log(\"Error\")\n            })\n            alert('Successfully updated details!!');\n            this.props.history.push({ pathname: '/clients' });\n        }\n    }\n\n    /**\n     * On click back the clients page will be redirected\n     * @param {*} event \n    */\n    onClickBack = (event) => {\n        event.preventDefault();\n        this.props.history.push({ pathname: '/clients' });\n    }\n\n    render() {\n        return (\n            <div className=\"page-container add-client-container\">\n                <div className=\"page-header-container\">\n                   <PageHeader title=\"Edit Client\" subtitle=\"\" />\n                </div>\n                <div className=\"page-content-container\">\n                    <div className=\"page-content\">\n                        <Row className=\"add-client-content\">\n                            <Col>\n                                <Form>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Client Name</Form.Label>\n                                                <Form.Control type=\"name\" name=\"clientName\" placeholder=\"Enter Client Name\" value={this.state.clientName} onChange={this.onValueChange}\n                                                    onBlur={this.validateClientName}\n                                                    isInvalid = {this.state.clientNameError}/>\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.clientNameError}\n                                                </Form.Control.Feedback>\n\n                                            </Form.Group>\n                                        </Col>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Organization</Form.Label>\n                                                <Form.Control type=\"name\" name=\"organizationName\" placeholder=\"Enter Organization Name\" value={this.state.organizationName} onChange={this.onValueChange}\n                                                    onBlur={this.validateOrganization}\n                                                    isInvalid = {this.state.organizationNameError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.organizationNameError}\n                                                </Form.Control.Feedback>        \n                                            </Form.Group>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Contact No</Form.Label>\n                                                <Form.Control type=\"name\" name=\"contactNo\" placeholder=\"Enter Contact No\" value={this.state.contactNo} onChange={this.onValueChange}\n                                                    onBlur={this.validateContactNo}\n                                                    isInvalid={this.state.contactNoError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.contactNoError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Website</Form.Label>\n                                                <Form.Control type=\"name\" name=\"websiteName\" placeholder=\"Enter Website Name\" value={this.state.websiteName} onChange={this.onValueChange}\n                                                    onBlur={this.validateWebsiteName}\n                                                    isInvalid={this.state.websiteNameError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.websiteNameError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n                                      \n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Email</Form.Label>\n                                                <Form.Control type=\"name\" name=\"emailId\" placeholder=\"Enter Email Id\" value={this.state.emailId} onChange={this.onValueChange}\n                                                    onBlur={this.validateEmailId}\n                                                    isInvalid={this.state.emailIdError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.emailIdError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>LinkedIn Profile</Form.Label>\n                                                <Form.Control type=\"name\" name=\"linkedInProfile\" placeholder=\"Enter LinkedIn Profile\" value={this.state.linkedInProfile} onChange={this.onValueChange}\n                                                    onBlur={this.validateLinkedInProfile}\n                                                    isInvalid={this.state.linkedInProfileError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.linkedInProfileError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n                                      \n                                    </Row>\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Street</Form.Label>\n                                                <Form.Control type=\"name\" name=\"street\" placeholder=\"Enter Street Name\" value={this.state.street} onChange={this.onValueChange}\n                                                    onBlur={this.validateStreet}\n                                                    isInvalid={this.state.streetError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.streetError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Business Description</Form.Label>\n                                                <Form.Control type=\"name\" name=\"businessDescription\" placeholder=\"Enter Business Description\" value={this.state.businessDescription} onChange={this.onValueChange}\n                                                    onBlur={this.validatebusinessDescription}\n                                                     />\n                                               \n                                            </Form.Group>\n                                        </Col>\n                                      \n                                    </Row>\n\n                                    <Row>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label>Postal Code</Form.Label>\n                                                <Form.Control type=\"name\" name=\"postalCode\" placeholder=\"Enter Postal code\" value={this.state.postalCode} onChange={this.onValueChange}\n                                                    onBlur={this.validatePostalcode}\n                                                    isInvalid={this.state.PostalCodeError} />\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.PostalCodeError}\n                                                </Form.Control.Feedback>\n                                            </Form.Group>\n                                        </Col>\n                                        <Col>\n                                            <Form.Group>\n                                                <Form.Label className=\"required\">Meeting Platform</Form.Label>\n                                                <Form.Control as=\"select\" name=\"meetingPlatform\" placeholder=\"Enter meeting platform\" value={this.state.meetingPlatform} onChange={this.onValueChange}\n                                                    onBlur={this.validateMeetingPlatform}\n                                                    isInvalid={this.state.meetingPlatformError}>\n                                                      <option>Select Project</option>\n                                                    <option value=\"Google Meet\">Google Meet</option>\n                                                    <option value=\"Skype\">Skype</option>\n                                                    <option value=\"Zoom\">Zoom</option>\n                                                    <option value=\"In person\">In person</option>\n                                                  </Form.Control>\n                                                <Form.Control.Feedback type=\"invalid\">\n                                                    {this.state.meetingPlatformError}\n                                                </Form.Control.Feedback>\n                                              \n\n                                            </Form.Group>\n                                        </Col>\n\n                                    </Row>\n                                    <Row>\n                                    <Col xs={6}>\n                                            <Form.Group>\n                                                <div className=\"country\">\n                                                    <Form.Label className=\"required\">Country </Form.Label>\n                                                    <CountryDropdown as=\"select\" name=\"country\" defaultOptionLabel=\"Select country\" value={this.state.country}\n                                                        onChange={(value) => this.selectCountry(value)}\n                                                    />\n                                                </div>\n                                                <div className=\"region\">\n                                                    <Form.Label>Region </Form.Label>\n                                                    <RegionDropdown\n                                                        country={this.state.country} blankOptionLabel=\"No Country Selected\" defaultOptionLabel=\"Select region\"\n                                                        as=\"select\" name=\"region\" value={this.state.region} onChange={(value) => this.selectRegion(value)}>\n                                                    </RegionDropdown>\n                                                </div>\n                                            </Form.Group>\n                                        </Col>\n\n                                    </Row> \n                                    \n                                    <Row className=\"generate-button-container\">\n                                        <Button className=\"primary-button\" onClick={this.onClickBack}>\n                                              Back\n                                        </Button>\n                                        <Button className=\"primary-button\" onClick={this.onUpdate}>\n                                            Update\n                                        </Button>\n                                    </Row>\n                                </Form>\n                            </Col>\n                        </Row>\n                        \n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(EditClient);","/**\n * Author: Janvi Patel.\n * Created On: 2021-06-07\n * view Client details.\n */\nimport React, { Component } from 'react';\nimport PageHeader from \"../../components/PageHeader\";\nimport { withRouter } from 'react-router-dom';\nimport \"../../styles/AddClient.scss\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport {Table} from \"react-bootstrap\";\n\nexport class ViewClient extends Component {\n\n    //constructor for props\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            ClientId: props.history.location.state.state.ClientId,\n            clientName: props.history.location.state.state.ClientName,\n            organizationName: props.history.location.state.state.Organization,\n            contactNo: props.history.location.state.state.ContactNo,\n            websiteName: props.history.location.state.state.Website,\n            linkedInProfile: props.history.location.state.state.LinkedInProfile,\n            emailId: props.history.location.state.state.Email,\n            street: props.history.location.state.state.Street,\n            businessDescription: props.history.location.state.state.BusinessDescription,\n            postalCode: props.history.location.state.state.PostalCode,\n            meetingPlatform: props.history.location.state.state.MeetingPlatform,\n            country: props.history.location.state.state.Country,\n            region: props.history.location.state.state.Region\n        }\n    }\n\n    /**\n     * On click back the clients page will be redirected\n     * @param {*} event\n     */\n    onClickBack = (event) => {\n        event.preventDefault();\n        this.props.history.push({ pathname: '/clients' });\n    }\n\n    render() {\n        return (\n            <div className=\"page-container add-client-container\">\n                <div className=\"page-header-container\">\n                    <PageHeader title=\"View Client\" subtitle=\"\" />\n                </div>\n                <div className=\"page-content-container\">\n                    <div className=\"page-content\">\n                        <Row>\n                            <Col className=\"text-right\">\n                                <Button className=\"btn primary-button\" onClick={this.onClickBack}>\n                                    <i className=\"fas fa-times\"></i> Close\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br/>\n                        <Row className=\"justify-content-center\">\n                            <Col md=\"8\">\n                                <Table bordered hover>\n                                    <tbody>\n                                    <tr>\n                                        <td>Client Name:</td>\n                                        <td>{this.state.clientName}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Contact No:</td>\n                                        <td>{this.state.contactNo}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Email:</td>\n                                        <td>{this.state.emailId}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Street:</td>\n                                        <td>{this.state.street}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Postal Code:</td>\n                                        <td>{this.state.postalCode}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Region:</td>\n                                        <td>{this.state.region}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Country:</td>\n                                        <td>{this.state.country}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Organization:</td>\n                                        <td>{this.state.organizationName}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Website:</td>\n                                        <td>{this.state.websiteName}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>LinkedIn Profile:</td>\n                                        <td>{this.state.linkedInProfile}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Business Description:</td>\n                                        <td>{this.state.businessDescription}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Meeting Platform:</td>\n                                        <td>{this.state.meetingPlatform}</td>\n                                    </tr>\n                                    </tbody>\n                                </Table>\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(ViewClient);","/**\n * Author: Deep Patel.\n * Created On: 2021-07-20\n *  Services Page for Testimonials.\n */\n\nimport axios from \"axios\";\n\nexport class testimonialServices{\n\n    // list of all testimonials\n    async list(data){\n        let object = {}\n        object['userId'] = data.userId\n        const result = await axios.post(\"/api/testimonials\",object);\n        return result.data;\n    };\n\n    // add data\n    async add(data){\n        const result = await axios.post(\"/api/testimonials/add\",data);\n        return result.data;\n    };\n\n    // update data by id\n    async update(data){\n        console.log(data);\n        const result = await axios.put(\"/api/testimonials/update/\"+data.id,data);\n        return result.data;\n    };\n\n    // remove data by id\n    async delete(deleteData) {\n        console.log(\"delete data:\",deleteData)\n        const result = await axios.post(\"/api/testimonials/remove\", deleteData);\n        return result.data;\n     }\n}\n\nexport default new testimonialServices()","/**\n * Author: Deep Patel.\n * Created On: 2021-07-20\n * Frontend Page for Testimonials.\n */\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport { Modal, Form, Button } from 'react-bootstrap';\nimport Datatable from '../components/Datatable';\nimport emailjs from 'emailjs-com';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport \"../styles/Testimonials.scss\";\nimport projectServices from '../services/projectsServices.js';\nimport clientServices from '../services/clientService.js';\nimport testimonialServices from '../services/testimonialServices.js';\n// var dateFormat = require(\"dateformat\");\n\nconst Testimonials = () => {\n\n    /**\n     * creting a column for a datatable to display testimonials\n    */\n    const columns = [\n        { Header: 'Project', accessor: 'project' },\n        { Header: 'Client', accessor: 'client' },\n        { Header: 'Feedback', accessor: 'feedback' },\n        // { Header: 'Requested on', accessor: row => dateFormat(row.requestedOn, \"dd-mm-yyyy, HH:MM:ss\") },\n        \n        {\n            // creating an action button containig entire row details\n            Header: 'Actions', accessor: 'row',\n            Cell: ({ row }) => (\n                <div className=\"action\">\n                    <div className=\"button-container\">\n                        <Button className=\"delete-button\"  onClick= {() => deleteTestimonial(row)} >Delete</Button>\n                    </div>\n                </div>\n            )\n        }\n    ];\n\n    /**\n     * fatching list of project details through an api call \n     * using project services's list functionality  \n     */\n    const [project, setProjects] = useState([]);\n    useEffect(() => {\n        projectServices.list({\"userId\": localStorage.getItem(\"user_id\")}).then(res => setProjects(res.data));\n    },[]); \n\n    /**\n     * fatching list of clients details through api call \n     * using clientServices's list functionality  \n     */\n    const [client, setClient] = useState([]);\n    useEffect(() => {\n        clientServices.getAllClients(localStorage.getItem(\"user_id\")).then(res => setClient(res.data));\n    },[]); \n\n    /**\n     * fatching list of Testimonials details through api call \n     * using testimonialService's list functionality  \n     */    const [testimonial, setTestimonial] = useState([]);\n    useEffect(() => {\n        testimonialServices.list({userId: localStorage.getItem('user_id')}).then(res => setTestimonial(res.data));\n    },[]);\n\n    /**\n     * Constant containing mailing information to send to \n     */\n    const [mailInfo, setMailInfo] = useState({\n        project: \"\",\n        client: \"\",\n        message: \"\",\n        id: \"\",\n        userId: localStorage.getItem('user_id')\n    });\n\n    /**\n     * Storing the values into the database using testimonialService's add functionality\n     * @param {*} e \n     * the response containig automated genrated id is fatched and stored into mailInfo's id parameter\n     */\n    const storeData = (e) => {\n        e.preventDefault();\n        setLgShow(false);\n        testimonialServices.add(mailInfo).then(response => {\n            mailInfo.id = response.result._id\n        })\n\n        sendEmail();\n    }\n\n    /**\n     * Method to send email on click event. \n     * @param {*} data \n     * The emails can be sent on specif id's using this functionalities.\n     */\n    function sendEmail() {\n\n        const Form_Link = \"http://localhost:3001/testimonials/requestTestimonials/\" + mailInfo.id;\n\n        // Mailing details\n        var mailParams = {\n            \n            //Mail Sender Details\n            freelancerName: 'Freelancer',\n            freelancerMail: 'deepatel1607@gmail.com',\n\n            //Mail Reciver Details\n            clientName: 'Client',\n            clientMail: 'dee16798ppatel@gmail.com',\n\n            //Attachment Messages\n            message: mailInfo.message,\n            link: Form_Link\n        };\n\n        // calling emailJS functionality with emailJS Credentials\n        emailjs.send('testimonial_request', 'template_fmwc5oo', mailParams, 'user_INB1ILGAt4GVje2eeyj2V')\n            .then(function (response) {\n                alert(\"Email Sent\");\n                console.log('SUCCESS!', response.status, response.text);\n\n            }, function (error) {\n                alert(\"Error: \" + error);\n                console.log('FAILED...', error);\n            });\n    }\n\n    /**\n     * Functionality to delete testimonials with a specific id of testimonial\n     * @param {*} row \n     */\n    const deleteTestimonial = (row) => {\n        if (window.confirm(\"Are you sure?\")) {\n            testimonialServices.delete(row.original).then(res => alert(res.message));\n            testimonialServices.list({userId: localStorage.getItem('user_id')}).then(res => setTestimonial(res.data));\n        }\n    };\n\n    /**\n     * onChange of the values store the values into mailInfo Parameters\n     * @param {*} e \n     * parameter e containig the values is used to fatch form element on change\n     */\n    const handleChange = (e) => {\n        let newRequest = {...mailInfo, [e.target.name]: e.target.value};\n        setMailInfo(newRequest);\n    };\n\n    // Model display constant to display model when true\n    const [lgShow, setLgShow] = useState(false);\n\n    return (\n        <div className=\"page-container add-testimonial-container\">\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Testimonials\" />\n            </div>\n            <div className=\"page-content-container\">\n                <div className=\"page-content\">\n                    <Row>\n                        <Col xs={12}>\n                            <div className=\"col-md-2 button-container\">\n                                <div className=\"row my-add-btn\">\n                                    <div className=\"col-md-5\"></div>\n                                    <div className=\"col-md-7\">\n                                        <div className=\"add-testimonial-container\">\n                                            <div className=\"generate-button-container\">\n                                                <button className=\"primary-button\" type=\"button\" align=\"right\" onClick={() => setLgShow(true)}> Request</button>\n                                            </div>\n                                        </div>\n                                        <Modal\n                                            size=\"lg\"\n                                            show={lgShow}\n                                            onHide={() => setLgShow(false)}\n                                            aria-labelledby=\"example-modal-sizes-title-lg\"\n                                        >\n                                            <Modal.Header closeButton>\n                                                <Modal.Title id=\"example-modal-sizes-title-lg\">\n                                                    Request Testimonial\n                                                </Modal.Title>\n                                            </Modal.Header>\n                                            <Modal.Body>\n                                                <Form id=\"contact-form\">\n\n                                                    <input type=\"hidden\" name=\"freelancerName\" id=\"freelancerName\" value=\"Freelancer_Deep\" />\n                                                    <input type=\"hidden\" name=\"freelancerMail\" id=\"freelancerMail\" value=\"deepatel1607@gmail.com\" />\n                                                    <input type=\"hidden\" name=\"clientName\" id=\"clientName\" value=\"Client_Deep\" />\n                                                    <input type=\"hidden\" name=\"clientMail\" id=\"clientMail\" value=\"dee16798ppatel@gmail.com\" />\n                                                    <input type=\"hidden\" name=\"message\" id=\"message\" value=\"From hidden\" />\n\n                                                    <Form.Group>\n                                                        <Form.Label className=\"required form-label\">Client</Form.Label>\n                                                        <Form.Control as=\"select\" name=\"client\"\n                                                            onChange={(e) => handleChange(e)} \n                                                        >\n                                                            <option>Select Client</option>\n                                                            {client.length && client.map(function(cli,index){\n                                                                return <option key={index} value={cli.ClientName}>{cli.ClientName}</option>\n                                                            })}\n                                                        </Form.Control>\n                                                    </Form.Group>\n\n                                                    <Form.Group>\n                                                        <Form.Label className=\"required form-label\">Project</Form.Label>\n                                                        <Form.Control as=\"select\" name=\"project\"\n                                                            onChange={(e) => handleChange(e)} \n                                                        >\n                                                            <option>Select Project</option>\n                                                            {project.length && project.filter(proj => proj.client && proj.client.includes(mailInfo.client))\n                                                            .map(function(proj,index){\n                                                            return <option key={index} value={proj.title}>{proj.title}</option>\n                                                        })}\n                                                        </Form.Control>\n                                                    </Form.Group>\n\n                                                    <Form.Group>\n                                                            <Form.Label className=\"required form-label\">Description Message</Form.Label>\n                                                            <Form.Control as=\"textarea\" name=\"message\" rows={3} id=\"message\" \n                                                                onChange={(e) => handleChange(e)} \n                                                            />\n                                                    </Form.Group>\n                                                    <Button variant=\"primary\" type=\"submit\" id=\"button\" value=\"Send\" onClick={storeData} >   \n                                                        Send\n                                                    </Button>\n                                                </Form>\n                                            </Modal.Body>\n                                        </Modal>\n                                    </div>\n                                </div>\n                            </div>\n                        </Col>\n                        <Col xs={12}>\n                            <Datatable columns={columns} data={testimonial} />\n                        </Col>\n                    </Row>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Testimonials\n","/**\n * Author: Deep Patel.\n * Created On: 2021-07-20\n * Frontend Page for Request Testimonials.\n */\n\nimport React from 'react'\nimport { useState, useEffect } from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport { Modal, Form, Button } from 'react-bootstrap';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport \"../styles/Testimonials.scss\";\nimport testimonialServices from '../services/testimonialServices.js';\nimport { useParams } from 'react-router-dom';\n\n/**\n * Request testimonial page containing the id of specific testimonial send to client via mail\n * @param {*} prop \n * @returns \n */\nconst RequestTestimonial = (prop) => {\n\n    const param = useParams();\n\n    // feedback Details\n    const [feedback, setFeedback] = useState({\n        \n        feedback: \"\",\n        id : param.id\n    });\n\n    /**\n     * On change stores new feedback details into the feedback variable\n     * @param {*} e \n     * Form elements are stored into the feedback on change\n     */\n    const handleChange = (e) => {\n        let newFeedback = {...feedback, [e.target.name]: e.target.value};\n        setFeedback(newFeedback);\n    };\n\n    /**\n     * Storing the values into the database using testimonialService's update functionality\n     * @param {*} e \n     * The data on specific id is updated using this functionality\n     */    \n    const storeData = (e) => {\n        e.preventDefault();\n        testimonialServices.update(feedback)\n    }\n\n    return (\n        <div>\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Testimonial Request\" />\n            </div>\n            <div className=\"page-content-container\">\n            <div>\n            <Row>    \n                <Col md = {5}></Col>\n                <Col md = {10}></Col>\n            </Row>\n            </div>\n            <Row>\n                    <Col md = {5}></Col>\n                    <Col md = {10}>\n                    <Form className=\"feedback-form\">\n                                <div className=\"col-md-3\"></div>\n                                <div className=\"col-md-6\">\n                                    <Form.Group>\n                                        <Form.Label className=\"required form-label\">Feedback: </Form.Label>\n                                        <Form.Control as=\"textarea\" name=\"feedback\" rows={5} id=\"feedback\" placeholder=\"Please provide Feedback...\" \n                                            onChange={(e) => handleChange(e)} \n                                        />\n                                    </Form.Group>\n                                </div>\n                                <div className=\"col-md-3\"></div>\n                                <div className=\"col-md-3\"></div>\n                                <div className=\"col-md-6\">\n                                <Button variant=\"primary\" type=\"submit\" id=\"feedbackSubmit\" onClick={storeData}>   \n                                    Submit\n                                </Button>\n                                </div>\n                                <div className=\"col-md-3\"></div>\n\n                    </Form>\n                    </Col>\n                    <Col md = {1}></Col>\n                </Row>\n\n            </div>\n        </div>    \n    )\n}\n\nexport default RequestTestimonial\n","/**\n * Author: Tejaswi Chaudhary.\n * Created On: 2021-06-07\n * Invoice Management component.\n */\nimport React,{Component} from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport {Button,Col,Row} from \"react-bootstrap\";\nimport Datatable from \"../components/Datatable\";\nimport { withRouter } from 'react-router-dom';\nimport \"../styles/InvoiceManagement.scss\";\nimport invoiceServices from \"../services/invoiceServices\";\nimport \"../styles/Invoices.scss\";\n\n\nexport class Invoices extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state={\n            checkbox : 'true',\n            delete:'false',\n            columns : [\n                { Header: 'Invoice Number', accessor: 'invoicename'},\n                { Header: 'Generated Date', accessor: 'generateddate'},\n                { Header: 'Due Date', accessor: 'duedate'},\n                { Header: 'Client Name', accessor: 'clientname'},\n                { Header: 'Project Name', accessor: 'projectname'},\n                { Header: 'Payment Status', accessor: 'paymentstatus'},\n                { Header: 'Action', accessor: 'button1',\n                    Cell:({row}) =>  (\n                        <div>\n                            <Button className=\"secondary-button\" onClick={() => this.editInvoice(row)}>\n                                Edit\n                            </Button>\n                            <Button className=\"secondary-button\" onClick={() => this.viewInvoice(row)}>\n                                View\n                            </Button>\n                            <Button className=\"delete-button\" onClick={() => this.deleteInvoice(row)}>\n                                Delete\n                            </Button>\n                        </div>)\n                }\n            ],\n            data:[]\n        }\n    }\n\n    //fetch list of all the generated invoices\n    getAllInvoices() {\n        invoiceServices.getAllInvoices().then((response) => {\n            if (response.status == 200) {\n                let invoiceDetails = [];\n                response.data.forEach(element => {\n\n                    let row = {}\n                    row.invoicename = element.invId;\n                    row.generateddate = element.generatedDate;\n                    row.duedate = element.dueDate;\n                    row.clientname = element.clientName;\n                    row.projectname = element.projectName;\n                    row.paymentstatus = element.paymentStatus;\n\n                    invoiceDetails.push(row)\n\n                });\n                if(invoiceDetails.length !=0)\n                    this.setState({\n                        data: invoiceDetails\n                    })\n\n            }\n        }).catch((error) => {\n            console.log(error)\n        })\n    }\n    componentDidMount() {\n        this.getAllInvoices()\n    }\n\n    //Edit invoice\n    editInvoice=(row)=>{\n        this.props.history.push({ pathname:'/editinvoice' }, {\n            state: row.original.invoicename\n        })\n    };\n\n    //open GenerateInvoice.js in read-only mode to view generated invoice details.\n    viewInvoice=(row)=>{\n\n        console.log(\"enterd\");\n        this.props.history.push({ pathname:'/invoice-generation' }, {\n            state: row.original.invoicename\n        })\n    };\n\n    //delete invoice\n    deleteInvoice = (row) => {\n        invoiceServices.deleteinvoice(row.original).then((response) => {\n            if(response){\n                this.setState({delete:'true'});\n                alert(\"Invoice Deleted\");\n                this.getAllInvoices()\n            }\n        }).catch((error) => {\n            console.log(\"Eroor\")\n        })\n    };\n\n    render() {\n        return (\n            <div className=\"page-container invoices-container\">\n                <div className=\"page-header-container\">\n                    <PageHeader title=\"Invoice Management\" subtitle=\"\" />\n                </div>\n                <div className=\"page-content-container\">\n                    <div className=\"page-content\">\n                        <Row className=\"button-container\">\n                            <Col>\n                                <a href=\"/invoices/generate\" title=\"Add Project\" className=\"primary-button\">\n                                    Generate Invoice\n                                </a>\n                            </Col>\n                        </Row>\n                        <Row className=\"data-table-container\">\n                            <Col>\n                                <Datatable columns={this.state.columns} data={this.state.data} allowCSV=\"false\"/>\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default withRouter(Invoices)","/**\n * Author: Bansi Mehta\n * Created On: 20201-07-20\n * Service containing api calls for TO-DO List.\n */\nimport axios from \"axios\"\nexport class todoListService {\n    async getAllTasks(data) {\n        let object = {}\n        object['currentDate'] = data.currentDate\n        object['userId'] = data.userId\n        const result = await axios.post(\"/api/todoLists/getList\", object);\n        return result;\n    }\n\n    async markTaskAsDone(id) {\n        const result = await axios.put(\"/api/todoLists/markAsDone\", { \"id\": id });\n        return result;\n    }\n\n    async deleteTask(id) {\n        const result = await axios.delete(\"/api/todoLists/deleteItem/\" + id);\n        return result;\n    }\n\n    async saveTask(saveData) {\n        const result = await axios.post(\"/api/todoLists/saveItem\", saveData);\n        return result;\n    }\n}\n\nexport default new todoListService()","/**\n * Author: Bansi Mehta.\n * Created On: 2021-06-07\n * Todo list component.\n */\nimport React, { Component } from 'react';\nimport { withRouter } from \"react-router\";\nimport { Container, Col, Row, Button } from 'react-bootstrap'\nimport { Card } from 'react-bootstrap';\nimport moment from \"moment\";\nimport axios from 'axios'\nimport \"../styles/TodoList.scss\";\nimport PageHeader from \"../components/PageHeader\";\nimport todoListService from \"../services/todoListService\";\nexport class TodoList extends Component {\n\n    constructor(props) {\n        super(props)\n\n        const currentDate = moment().format('YYYY-MM-DD')\n        this.state = {\n            completeTasks: [],\n            incompleteTasks: [],\n            date: currentDate,\n            newTask: ''\n        }\n\n        this.item = {\n            title: '',\n            status: false,\n            date: currentDate\n        }\n        this.userId = localStorage.getItem(\"user_id\")\n    }\n\n    componentDidMount() {\n        this.getAllData(this.state.date)\n    }\n\n    /**\n     * On value change of a control, set it in state.\n     * @param {*} event \n     */\n    onValueChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    /**\n     * Get all the tasks based on date.\n     * Date format: \"YYYY-MM-DD\".\n     * Divide the tasks received into groups: complete and incomplete to display.\n     * @param {*} date \n     */\n    getAllData(date) {\n        todoListService.getAllTasks({\"currentDate\": date, \"userId\": this.userId}).then(response => {\n            if (response.status === 200) {\n                if (response.data && response.data.result && response.data.result.length) {\n                    let completeTask = []\n                    let incompleteTask = []\n                    response.data.result.forEach(row => {\n                        if (row && row.status == true) {\n                            completeTask.push(row)\n                        } else {\n                            incompleteTask.push(row)\n                        }\n                    })\n                    this.setState({ completeTasks: completeTask })\n                    this.setState({ incompleteTasks: incompleteTask })\n                } else {\n                    this.setState({ completeTasks: [] })\n                    this.setState({ incompleteTasks: [] })\n                }\n            }\n        })\n    }\n\n    /**\n     * Mark the task item as complete based on id.\n     * Refresh the list if successful.\n     * @param {*} rowData \n     */\n    taskItemComplete(rowData) {\n        todoListService.markTaskAsDone(rowData._id).then(response => {\n            if (response.status == 200) {\n                this.getAllData(this.state.date)\n                alert(\"Task completed successfully\");\n            }\n        })\n    }\n\n    /**\n     * Delete the task based on id.\n     * Refresh the list if successful.\n     * @param {*} rowData \n     */\n    taskItemDelete(rowData) {\n        todoListService.deleteTask(rowData._id).then(response => {\n            if (response.status == 200) {\n                this.getAllData(this.state.date);\n                alert(\"Task deleted successfully\");\n            }\n        })\n    }\n\n    /**\n     * Add new task.\n     * Refresh the list if successful.\n     * @param {*} event \n     */\n    saveItem = (event) => {\n        event.preventDefault()\n        if (this.state.newTask) {\n            let saveData = {\n                title: this.state.newTask,\n                date: this.state.date,\n                userId: this.userId\n            }\n            todoListService.saveTask(saveData).then(response => {\n                if (response.status == 200) {\n                    this.setState({ newTask: '' })\n                    this.getAllData(this.state.date)\n                    alert(\"Task added successfully\");\n                }\n            })\n        } else {\n            alert(\"Cannot enter empty task\")\n        }\n        \n    }\n\n    /**\n     * Date navigation: Get previous date from the date for which tasks are currently displayed.\n     * @param {*} event \n     */\n    getPreviousDate = (event) => {\n        let previousDate = moment(this.state.date, 'YYYY-MM-DD').subtract(1, 'day').format(\"YYYY-MM-DD\")\n        this.setState({ date: previousDate })\n        this.getAllData(previousDate)\n    }\n\n    /**\n     * Date navigaiton: Get next date from the date for which tasks are currently displayed.\n     * @param {*} event \n     */\n    getNextDate = (event) => {\n        let nextDate = moment(this.state.date, 'YYYY-MM-DD').add(1, 'day').format(\"YYYY-MM-DD\")\n        this.setState({ date: nextDate })\n        this.getAllData(nextDate)\n    }\n\n    render() {\n        return (\n            <div className=\"page-container to-do-list-container\">\n                <div className=\"page-header-container\">\n                    <PageHeader title=\"Todo List\" subtitle=\"\" />\n                </div>\n                <div className=\"page-content-container\">\n                    <div className=\"page-content\">\n                        <Container className=\"to-do-list-content\">\n                            <Row className=\"date-row\">\n                                <Col className=\"date-control\">\n                                    <span className=\"navigate-date\" onClick={this.getPreviousDate}>\n                                        <i className=\"fas fa-chevron-left\"></i>\n                                    </span>\n                                    <span>\n                                        {this.state.date}\n                                    </span>\n                                    <span className=\"navigate-date\" onClick={this.getNextDate}>\n                                        <i className=\"fas fa-chevron-right\"></i>\n                                    </span>\n                                </Col>\n                            </Row>\n                            <Row className=\"add-row\">\n                                <div className=\"add-text\">\n                                    <input type=\"text\" palceholder=\"Add task\" name=\"newTask\" value={this.state.newTask} onChange={this.onValueChange} className=\"input-control\" />\n                                </div>\n                                <div className=\"add-button\">\n                                    <Button className=\"primary-button add-button\" onClick={this.saveItem}>Add</Button>\n                                </div>\n                            </Row>\n                            <Row className=\"to-do-list-items\">\n                                <Col md={12} lg={6}>\n                                    <div>\n                                        {this.state.incompleteTasks.map(row => (\n                                            <Card className=\"card-content-incomplete\">\n                                                <Row className=\"card-item\">\n                                                    <Col xs={3} md={2} className=\"card-item-content\">\n                                                        <input type=\"checkbox\" checked={row.status} onClick={() => this.taskItemComplete(row)}></input>\n                                                    </Col>\n                                                    <Col xs={3} md={7} className=\"card-item-content\">\n                                                        <Card.Body>\n                                                            <Card.Title>{row.title}</Card.Title>\n                                                        </Card.Body>\n                                                    </Col>\n                                                    <Col xs={3} md={3} className=\"card-item-content\">\n                                                        <Button className=\"primary-button\" onClick={() => this.taskItemDelete(row)}>Delete</Button>\n                                                    </Col>\n                                                </Row>\n                                            </Card>\n                                        ))}\n                                    </div>\n                                </Col>\n                                <Col md={12} lg={6}>\n                                    <div>\n                                        {this.state.completeTasks.map(row => (\n                                            <Card className=\"card-content-complete\">\n                                                <Card.Body>\n                                                    <Card.Title className=\"card-item-completed\">{row.title}</Card.Title>\n                                                </Card.Body>\n                                            </Card>\n                                        ))}\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </div>\n                </div>\n            </div>\n        )\n\n    }\n}\n\nexport default withRouter(TodoList);","/**\n * Author: Sanket Shah.\n * Created On: 2021-07-26\n * Services for Calendar Event.\n */\n\n import axios from \"axios\";\n\n export class calendarServices{\n \n    /**\n    * Method to hit the API of getting list of calendar events\n    */\n    async list(data){\n        let object = {}\n        object['userId'] = data.userId\n        const result = await axios.post(\"/api/calendar\",object);\n        return result.data;\n    };\n\n    /**\n    * Method to hit the API of adding calendar event in a list\n    */\n     async add(data){\n        const result = await axios.post(\"/api/calendar/add\",data);\n        return result.data;\n     };\n }\n \n export default new calendarServices()","import React, { useEffect, useState } from 'react';\nimport PageHeader from \"../components/PageHeader\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { Button, Container, Form, Modal, Row } from \"react-bootstrap\";\nimport calendarServices from \"../services/calendarServices\";\nimport moment from 'moment';\nimport \"../styles/Calendar.scss\";\n\nexport default function Calendar(){\n    const [events, setEvents] = useState([]);\n\n    useEffect(() => {\n        calendarServices.list({\"userId\": localStorage.getItem(\"user_id\")}).then(res => {\n            let newEvents = [...events]\n            for (let i = 0; i < res.data.length; i++) {\n                const dateTime = moment(`${res.data[i].date} ${res.data[i].time}`, 'YYYY-MM-DD HH:mm:ss').format();\n                var data = {title : res.data[i].eventName , date : dateTime};\n                newEvents.push(data);\n            }\n            setEvents(newEvents);\n        });\n    },[]);\n\n    const [calendarEvent, setCalendarEvent] = useState({\n        eventName: \"\",\n        category: \"\",\n        date: \"\",\n        time: \"\",\n        userId: localStorage.getItem(\"user_id\")\n    });\n\n    const [calendarEventError, setCalendarEventError] = useState({\n        eventName: \"\",\n        category: \"\",\n        date: \"\",\n        time: \"\"\n    });\n\n    //New Task Validation\n    const handleChange = (e) => {\n        let newCalendarEvent = {...calendarEvent, [e.target.name]: e.target.value };\n        setCalendarEvent(newCalendarEvent);\n    };\n    \n    const [showModal, setShowModal] = useState(false);\n\n    const isEventValid = (e) => {\n        e.preventDefault();\n        let valid = true;\n        setCalendarEventError({\n            eventName: \"\",\n            category: \"\",\n            date: \"\",\n            time: \"\"\n        });\n        let newCalendarEventError = {...calendarEventError};\n\n        if (!calendarEvent.eventName.length > 0) {\n            newCalendarEventError.eventName = \"Event Name is required\";\n            setCalendarEventError(newCalendarEventError);\n            valid = false;\n        }\n        else{\n            newCalendarEventError.eventName = \"\";\n            setCalendarEventError(newCalendarEventError);\n        }\n\n        if (!calendarEvent.category.length > 0) {\n            newCalendarEventError.category = \"Category is required\";\n            setCalendarEventError(newCalendarEventError);\n            valid = false;\n        }\n        else{\n            newCalendarEventError.category = \"\";\n            setCalendarEventError(newCalendarEventError);\n        }\n\n        if (!calendarEvent.time.length > 0) {\n            newCalendarEventError.time = \"Event Time is required\";\n            setCalendarEventError(newCalendarEventError);\n            valid = false;\n        }\n        else{\n            newCalendarEventError.time = \"\";\n            setCalendarEventError(newCalendarEventError);\n        }\n\n        if(valid === true){\n            calendarServices.add(calendarEvent).then(res => res);\n            let newEvents = [...events]\n            const dateTime = moment(`${calendarEvent.date} ${calendarEvent.time}`, 'YYYY-MM-DD HH:mm:ss').format();\n            var data = {title : calendarEvent.eventName , date : dateTime};\n            newEvents.push(data);\n            setEvents(newEvents);\n            handleModalClose();\n        }\n        return valid;\n    };\n\n    // New Task Modal Event Handle\n    const handleModalClose = () => setShowModal(false);\n    const handleModalShow = (arg) => {\n        calendarEvent.date = arg.dateStr;\n        setShowModal(true);\n    }\n\n    return (\n        <div className=\"page-container calendar-container\">\n            <div className=\"page-header-container\">\n                <PageHeader title=\"Calendar\"/>\n            </div>\n            <div className=\"page-content-container\">\n                <div className=\"page-content\">\n                    <Container className=\"to-do-list-content\"></Container>\n                    <FullCalendar\n                        defaultView=\"dayGridMonth\"\n                        plugins={[dayGridPlugin, interactionPlugin]}\n                        events={events}\n                        dateClick={handleModalShow}\n                    />\n                    <Modal show={showModal} onHide={handleModalClose}>\n                            <Form onSubmit={(e) => isEventValid(e)}>\n                                <Modal.Header closeButton>\n                                    <Modal.Title>New Calendar Event</Modal.Title>\n                                </Modal.Header>\n                                <Modal.Body className=\"show-grid\">\n                                    <Container>\n                                        <Row>\n                                            <Form.Group className=\"mb-3\">\n                                                <Form.Label>Event Name</Form.Label>\n                                                <Form.Control type=\"text\" name=\"eventName\" placeholder=\"Event Name...\"\n                                                                onChange={(e) => handleChange(e)}\n                                                                className={calendarEventError.eventName.length > 0 ? \"is-invalid\" : \"\"} />\n                                                <Form.Text className=\"text-danger\">{calendarEventError.eventName}</Form.Text>\n                                            </Form.Group>\n                                        </Row>\n                                        <Row>\n                                            <Form.Group className=\"mb-3\">\n                                                <Form.Label>Event Category</Form.Label>\n                                                <Form.Control type=\"text\" name=\"category\" placeholder=\"Event Category...\"\n                                                                onChange={(e) => handleChange(e)}\n                                                                className={calendarEventError.category.length > 0 ? \"is-invalid\" : \"\"} />\n                                                <Form.Text className=\"text-danger\">{calendarEventError.category}</Form.Text>\n                                            </Form.Group>\n                                        </Row>\n                                        <Row>\n                                            <Form.Group className=\"mb-3\">\n                                                <Form.Label>Event Time</Form.Label>\n                                                <Form.Control type=\"time\" name=\"time\" placeholder=\"Event Time...\"\n                                                                onChange={(e) => handleChange(e)}\n                                                                className={calendarEventError.time.length > 0 ? \"is-invalid\" : \"\"} />\n                                                <Form.Text className=\"text-danger\">{calendarEventError.time}</Form.Text>\n                                            </Form.Group>\n                                        </Row>\n                                    </Container>\n                                </Modal.Body>\n                                <Modal.Footer>\n                                    <Button className=\"secondary-button\" type=\"reset\" onClick={handleModalClose}>\n                                        Close\n                                    </Button>\n                                    <Button className=\"primary-button\" type=\"submit\">\n                                        Add\n                                    </Button>\n                                </Modal.Footer>\n                            </Form>\n\n                        </Modal>\n                    </div>\n                </div>\n        </div>\n    )\n}","/**\n * Author: Tejaswi Chaudhary.\n * Created On: 2021-06-07\n * Invoice Edit component.\n */\nimport React, { Component } from 'react';\nimport PageHeader from \"../../components/PageHeader\";\nimport Datatable from \"../../components/Datatable\";\nimport { withRouter } from 'react-router-dom';\nimport \"../../styles/EditInvoice.scss\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios'\nimport invoiceServices from \"../../services/invoiceServices\";\n\nexport class EditInvoice extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state={\n            projectId: props && props.history && props.history.location&&props.history.location.state &&props.history.location.state.state?props.history.location.state.state:0,\n            invoiceNumber:\"\",\n            projects:\"\",\n            clientName:\"\",\n            generatedDate:\"\",\n            dueDate:\"\",\n            hourlyRate:\"\",\n            Total:\"\",\n            paymentstatus:\"\",\n            paymentPreStatus:\"\",\n            taskendDate:\"\"\n            \n        }}\n        //Fetch invoice based on invoice is to update it.\n        componentDidMount() {\n          \n            invoiceServices.findInvoice(this.state).then((response) =>{\n               \n                if (response.status == 200){\n                    this.setState({project: response.data.projectName})\n                    this.setState({clientName:response.data.clientName})\n                    this.setState({generatedDate: response.data.generatedDate})\n                    this.setState({Total:response.data.totalCost})\n                    this.setState({invoiceNumber:response.data.invId})\n                    this.setState({hourlyRate:response.data.hourlyRate})\n                    this.setState({paymentPreStatus:response.data.paymentStatus})\n                    this.setState({taskendDate:response.data.paymentStatus})\n                } \n            }).catch((error) => {\n                console.log(error)\n            })\n        }\n\n        //On value change of a control, set it in state.\n        onValueChange = (event) => {\n            this.setState({\n                [event.target.name]: event.target.value\n            });\n        }\n    \n        //validate due date\n        validateDueDate = (event) => {\n            let isValid = true;\n            if (this.state.dueDate) {\n                const today = new Date()\n                const selectedDate = new Date(this.state.dueDate)\n                if (selectedDate < today) {\n                    this.setState({ dueDateError: \"Due Date cannot be past date\" })\n                    isValid = false;\n                }\n                else {\n                    this.setState({ dueDateError: \"\" })\n                }\n            } \n            return isValid;\n        }\n    \n        //validate form\n        validateForm = (event) => {\n            let isValid = true\n            if (!this.validateDueDate()) {\n                isValid = false;\n            }\n           \n            return isValid;\n        }\n        //update invoice\n        update = (e) =>{\n            if(this.validateForm()){\n                if(!this.state.paymentstatus && !this.state.dueDate){\n                    alert(\"Please fill the field\")\n                }else{\n                    \n                    invoiceServices.updateInvoice(this.state).then((response) => {\n                    if(response){\n                        alert(\"Updated Successfully\")\n                        this.cancel()\n                    }\n                }).catch((error) => {\n                     console.log(error)\n                })\n                \n            }\n        }   \n        }\n        //redirect to invoice management screen\n        cancel = (e) =>{\n            this.props.history.push('/invoicemanagement')\n        }\n       \n        render() {\n            return (\n                <div className=\"page-container edit-invoice-generation-container\">\n                    <div className=\"page-header-container\">\n                        {this.state.readonly ? (<PageHeader title=\"Invoice Details\" subtitle=\"\" />)\n                        :(<PageHeader title=\"Invoice Generation\" subtitle=\"\" />)}\n                    </div>\n                    <div className=\"page-content-container\">\n                        <div className=\"page-content\">\n                            <Row className=\"invoice-generation-content\">\n                                <Col>\n                                    <Form>\n                                        <div className=\"generate-forms\">\n                                            <Row>\n                                                <Col>\n                                                    <span>\n                                                        <div>Invoice Number :{this.state.invoiceNumber}</div>\n                                                        <div>Project Name :  {this.state.projects}</div>\n                                                        <div>Client Name : {this.state.clientName}</div>\n                                                        <div>Invoice Genrated : {this.state.generatedDate} </div>\n                                                        <div>Hourly Rate :{this.state.hourlyRate} CAD </div>\n                                                        <div>Total Amount :{this.state.Total} CAD </div>\n                                                        \n                                                    </span>\n                                                    <Form.Group>\n                                                        <Form.Label className=\"required\">Payment Status</Form.Label>\n                                                        <Form.Control type=\"text\" name=\"paymentstatus\" value={this.state.paymentstatus} onChange={this.onValueChange}>\n                                                        </Form.Control>\n                                                        <Form.Control.Feedback type=\"invalid\">\n                                                            {this.state.projectError}\n                                                        </Form.Control.Feedback>\n                                                    </Form.Group>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col>\n                                                    <Form.Group>\n                                                        <div className=\"inline-date-control\">\n                                                            <div className=\"due-date-control\">\n                                                                <div>\n                                                                    <Form.Label className=\"required\">Invoice Duedate</Form.Label>\n                                                                </div>\n                                                                <Form.Control type=\"date\" className=\"start-date\" name=\"dueDate\" placeholder=\"Due Date\" value={this.state.dueDate} onChange={this.onValueChange}\n                                                                    onBlur={this.validateDate}\n                                                                    isInvalid={this.state.dueDateError} />\n                                                                <Form.Control.Feedback type=\"invalid\">\n                                                                    {this.state.dueDateError}\n                                                                </Form.Control.Feedback>\n                                                            </div>\n                                                        </div>\n                                                    </Form.Group>\n                                                </Col>\n            \n                                            </Row>\n                                        </div>\n                                    </Form>\n                                </Col>\n                            </Row>\n                            <div className=\"generate-buttons\">         \n                                <Row className=\"generate-button-container\">\n                                    <Button className=\"primary-button\" onClick={this.update}>\n                                        Update Invoice\n                                    </Button>\n                                    <Button className=\"secondary-button\" onClick={this.cancel}>\n                                        Cancel\n                                    </Button>\n                                </Row> \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n}\nexport default withRouter(EditInvoice)","import React, { Component } from 'react'\nimport { withRouter } from \"react-router\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport PageHeader from \"../components/PageHeader\";\nimport { exportComponentAsJPEG } from 'react-component-export-image';\nimport Flippy, { FrontSide, BackSide } from 'react-flippy';\nimport Button from 'react-bootstrap/Button';\nimport { ButtonGroup } from 'react-bootstrap';\nimport testimonialServices from \".././services/testimonialServices\"\nimport registerServices from \".././services/registerServices\"\nimport \".././styles/BusinessCard.scss\";\n\nclass BusinessCardFront extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <div className=\"business-card-container\">\n                <div className=\"business-card-top\">\n                    <div className=\"business-card-front\">\n                        <div className=\"name\">\n                            {this.props.apiData.Name ? (\n                                <span>{this.props.apiData.Name}</span>\n                            ) : (\n                                <span></span>\n                            )}\n                        </div>\n                        <div className=\"email other-information\">\n                            {this.props.apiData.Email ? (\n                                <span><i class=\"fas fa-envelope-square\"></i>&nbsp;{this.props.apiData.Email}</span>\n                            ) : (\n                                <span></span>\n                            )}\n                        </div>\n                        <div className=\"phone-number other-information\">\n                            {this.props.apiData.ContactNo ? (\n                                <span><i class=\"fas fa-phone-alt\"></i>&nbsp;{this.props.apiData.ContactNo}</span>\n                            ) : (\n                                <span></span>\n                            )}\n                        </div>\n                        <div className=\"linked-in-profile other-information\">\n                            {this.props.apiData.LinkedInProfile ? (\n                                <span><i class=\"fab fa-linkedin\"></i>&nbsp;{this.props.apiData.LinkedInProfile}</span>\n                            ) : (\n                                <span></span>\n                            )}\n                        </div>\n                        <div className=\"web-site other-information\">\n                            {this.props.apiData.Website ? (\n                                <span><i class=\"fas fa-at\"></i>&nbsp;{this.props.apiData.Website}</span>\n                            ) : (\n                                <span></span>\n                            )}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"business-class-bottom\">\n                    <div className=\"bottom-bar bar-first\"></div>\n                    <div className=\"bottom-bar bar-second\"></div>\n                    <div className=\"bottom-bar bar-third\"></div>\n                    <div className=\"bottom-bar bar-fourth\"></div>\n                    <div className=\"bottom-bar bar-fifth\"></div>\n                    <div className=\"bottom-bar bar-sixth\"></div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nclass BusinessCardBack extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <div className=\"business-card-container\">\n                <div className=\"business-card-top\">\n                    <div className=\"business-card-back\">\n                        <div className=\"feedback-row\">\n                        Client Feedback...\n                        </div>\n                        \n                        {\n                            this.props.apiData && this.props.apiData.length ? this.props.apiData.map(row => (\n                                <div className=\"feedback-row\">\n                                    <span className=\"feedback\">{row.feedback}</span><span className=\"client\">{row.client}</span>\n                                </div>\n                            )) : (\n                                <div className=\"empty-review\">Eager To Help Out.....</div>\n                            )\n                        }\n                    </div>\n                </div>\n                <div className=\"business-class-bottom\">\n                    <div className=\"bottom-bar bar-first\"></div>\n                    <div className=\"bottom-bar bar-second\"></div>\n                    <div className=\"bottom-bar bar-third\"></div>\n                    <div className=\"bottom-bar bar-fourth\"></div>\n                    <div className=\"bottom-bar bar-fifth\"></div>\n                    <div className=\"bottom-bar bar-sixth\"></div>\n                </div>\n            </div>\n        )\n    }\n}\n\nclass BusinessClassDisplay extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n\n\n    render() {\n        return (\n            <Row className=\"business-card-content\">\n                <Col className=\"business-card-data\">\n                    <Flippy flipOnHover={true} style={{ display: \"flex\", justifyContent: \"center\", width: '24rem', height: '12rem' }}>\n                        <FrontSide>\n                            <BusinessCardFront apiData={this.props && this.props.data && this.props.data.profileData} />\n                        </FrontSide>\n                        <BackSide>\n                            <BusinessCardBack apiData={this.props && this.props.data &&  this.props.data.testimonialData} />\n                        </BackSide>\n                    </Flippy>\n                </Col>\n            </Row>\n        )\n\n    }\n}\nexport class BusinessCard extends Component {\n    constructor(props) {\n        super(props);\n        this.componentRef = React.createRef();\n        this.state = {\n            profileData: {\n                // Name: \"Bansi Mehta\",\n                // Email: \"flute.bansi@gmail.com\",\n                // ContactNo: \"902 989 4001\",\n                // LinkedInProfile: \"somethingsomethingsomething\",\n                // Website: \"somethingsomthingsomething\"\n            },\n            testimonialData: [\n            ],\n            exportSide: 'Front'\n        }\n    }\n\n    exportAsSide = (side) => {\n        this.setState({ exportSide: side })\n    }\n\n    componentDidMount() {\n        // fetch data and set it into state\n        let id = localStorage.getItem('user_id')\n        registerServices.fatchUserById(id).then(response => {\n            if (response) {\n                this.setState({profileData: response})\n            }\n        })\n\n        testimonialServices.list().then(response => {\n            if (response.data && response.data.length) {\n                this.setState({testimonialData: response.data.splice(0,2)})\n            }\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"page-container business-card-page\">\n                    <div className=\"page-header-container\">\n                        <PageHeader title=\"Business Card\" subtitle=\"\" />\n                    </div>\n                    <div className=\"page-content-container\">\n                        <div className=\"page-content\">\n                            <Row>\n                                <Col xs={12}>\n                                    <BusinessClassDisplay data={this.state}></BusinessClassDisplay>\n                                </Col>\n                                <Col xs={4} className=\"button-to-export\">\n                                    <div className=\"button-container\">\n                                        <ButtonGroup>\n                                            <Button className=\"secondary-button\" onClick={() => this.exportAsSide('Front')}>Front</Button>\n                                            <Button className=\"secondary-button\" onClick={() => this.exportAsSide('Back')}>Back</Button>\n                                        </ButtonGroup>\n                                    </div>\n                                </Col>\n                                <Col xs={8}>\n                                    <React.Fragment>\n                                        <div>\n                                            {\n                                                this.state.exportSide === 'Front' ? (\n                                                    <BusinessCardFront ref={this.componentRef} apiData={this.state.profileData} />\n\n                                                ) : (\n                                                    <BusinessCardBack ref={this.componentRef} apiData={this.state.testimonialData} />\n                                                )\n                                            }\n                                        </div>\n                                        <div className=\"export-button\">\n                                            <Button className=\"primary-button\" onClick={() => exportComponentAsJPEG(this.componentRef)}>Export As JPEG</Button>\n                                        </div>\n\n                                    </React.Fragment>\n                                </Col>\n                            </Row>\n\n\n\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(BusinessCard)\n","/* Author: Team */\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AppLayout from \"./layouts/AppLayout\";\nimport DashboardLayout from \"./layouts/DashboardLayout\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Auth/Login\";\nimport Register from \"./pages/Auth/Register\";\nimport Dashboard from \"./pages/Dashboard\";\nimport InvoiceGeneration from \"./pages/Invoices/GenerateInvoice\";\nimport Timelogs from \"./pages/Timelogs\";\nimport Projects from \"./pages/Projects\";\nimport AddProject from \"./pages/Projects/AddProject\";\nimport EditProject from \"./pages/Projects/EditProject\";\nimport Clients from \"./pages/Clients\";\nimport AddClient from \"./pages/Clients/AddClient\";\nimport EditClient from \"./pages/Clients/EditClient\";\nimport ViewClient from \"./pages/Clients/ViewClient\";\nimport Testimonials from \"./pages/Testimonials\";\nimport RequestTestimonials from \"./pages/RequestTestimonial\";\nimport InvoiceManagement from \"./pages/Invoices\"\nimport TodoList from \"./pages/TodoList\"\nimport Calendar from \"./pages/Calendar\";\nimport EditInvoice from \"./pages/Invoices/EditInvoice\"\nimport { BusinessCard } from \"./pages/BusinessCard\";\nexport default function App() {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/\">\n                    <AppLayout>\n                        <Home />\n                    </AppLayout>\n                </Route>\n                <Route path=\"/login\">\n                    <AppLayout>\n                        <Login />\n                    </AppLayout>\n                </Route>\n                <Route exact path=\"/register\">\n                    <AppLayout>\n                        <Register />\n                    </AppLayout>\n                </Route>\n                <Route path=\"/register/add\">\n                    <DashboardLayout>\n                        <Register />\n                    </DashboardLayout>\n                </Route>\n\n                <Route path=\"/dashboard\">\n                    <DashboardLayout>\n                        <Dashboard />\n                    </DashboardLayout>\n                </Route>\n                <Route exact path=\"/clients\">\n                    <DashboardLayout>\n                        <Clients />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/clients/add\">\n                    <DashboardLayout>\n                        <AddClient />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/EditClient\">\n                    <DashboardLayout>\n                        <EditClient />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/ViewClient\">\n                    <DashboardLayout>\n                        <ViewClient />\n                    </DashboardLayout>\n                </Route>\n                <Route exact path=\"/projects\">\n                    <DashboardLayout>\n                        <Projects />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/projects/add\">\n                    <DashboardLayout>\n                        <AddProject />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/projects/edit/:id\">\n                    <DashboardLayout>\n                        <EditProject />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/timelogs\">\n                    <DashboardLayout>\n                        <Timelogs />\n                    </DashboardLayout>\n                </Route>\n                <Route exact path=\"/invoices\">\n                    <DashboardLayout>\n                        <InvoiceManagement />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/invoices/generate\">\n                    <DashboardLayout>\n                        <InvoiceGeneration />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/editinvoice\">\n                    <DashboardLayout>\n                        <EditInvoice />\n                    </DashboardLayout>\n                </Route>\n                <Route exact path=\"/testimonials\">\n                    <DashboardLayout>\n                        <Testimonials />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/testimonials/requestTestimonials/:id\">\n                    <AppLayout>\n                        <RequestTestimonials />\n                    </AppLayout>\n                </Route>\n                <Route path=\"/todolist\">\n                    <DashboardLayout>\n                        <TodoList />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/calendar\">\n                    <DashboardLayout>\n                        <Calendar />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/business-card\">\n                    <DashboardLayout>\n                        <BusinessCard />\n                    </DashboardLayout>\n                </Route>\n                <Route path=\"/\">\n                    <div>404 Page not found.</div>\n                </Route>\n            </Switch>\n        </Router>\n    );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/bootstrap_custom.scss';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './styles/style.scss';\nimport './styles/button_style.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}